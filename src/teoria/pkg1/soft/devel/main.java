/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package teoria.pkg1.soft.devel;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import static java.awt.image.ImageObserver.WIDTH;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.TemporalAdjusters;
import java.util.Date;
import java.util.HashSet;
import java.util.TimeZone;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import java.sql.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.lowagie.text.Document;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JPanel;

/**
 *
 * @author josue
 */
public class main extends javax.swing.JFrame {

    public String DeveloperID = "";
    public HiloRefresh HR;
    public HiloRefresh HR2;
    public ArrayList<JTextArea> calendario = new ArrayList<JTextArea>();
    //MSI LOCATION
    public boolean modif = false;
    public boolean modifU = false;
    public String userTempo = "";
    public String lenguajes = "";
    public String tecnos = "";
    static String url = "jdbc:sqlserver://burgospc\\sqlexpress;databaseName=Proj_Teoria1;encrypt=true;trustServerCertificate=true";
    static public String username = "adrian";
    static public String password = "12345";
    static public String currentuser = "eaguilaortiz0403@gmail.com";
    public String bugs = "";
    public static boolean rolsito = false;
    public static boolean rolsito2 = false;
    static public String currentuser2 = "";

    public main() {
        initComponents();
        inicializarCalendario();
        llenarCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        addDev = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameJT = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        prograJT = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        techsJT = new javax.swing.JTextField();
        prograBut = new javax.swing.JButton();
        techBut = new javax.swing.JButton();
        finalAdd = new javax.swing.JButton();
        idJT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        modifDev = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        finalAdd1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        techBut1 = new javax.swing.JButton();
        techsJT1 = new javax.swing.JTextField();
        prograBut1 = new javax.swing.JButton();
        prograJT1 = new javax.swing.JTextField();
        nameJT1 = new javax.swing.JTextField();
        idJT1 = new javax.swing.JTextField();
        elimDev = new javax.swing.JDialog();
        graphsP = new javax.swing.JDialog();
        bugsP = new javax.swing.JDialog();
        proyecsP = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        proyecsTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        softAdd = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        Devs = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        panelshow2 = new javax.swing.JScrollPane();
        devsTable2 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        teamsTable = new javax.swing.JTable();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        crearProyecs = new javax.swing.JDialog();
        jPanel11 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        Chooser = new com.toedter.calendar.JDateChooser();
        proyName = new javax.swing.JTextField();
        proyCode = new javax.swing.JTextField();
        comboDevs = new javax.swing.JComboBox<>();
        jButton26 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        Chooser1 = new com.toedter.calendar.JDateChooser();
        Graphs = new javax.swing.JDialog();
        jPanel12 = new javax.swing.JPanel();
        bugss = new javax.swing.JDialog();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        bugsTable = new javax.swing.JTable();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        devieTable = new javax.swing.JTable();
        jButton29 = new javax.swing.JButton();
        addUser = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        userNTF = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        passNTF = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        nameNTF = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        rolsCombo = new javax.swing.JComboBox<>();
        jButton30 = new javax.swing.JButton();
        MainPanel = new javax.swing.JPanel();
        SignInPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        UsuarioTextField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        PasswordTextField = new javax.swing.JPasswordField();
        AdminPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        bugsbut = new javax.swing.JButton();
        graphbut = new javax.swing.JButton();
        elimde = new javax.swing.JButton();
        modifde = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        proyecsde = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        proyecsde1 = new javax.swing.JButton();
        agregde1 = new javax.swing.JButton();
        agregde2 = new javax.swing.JButton();
        agregde3 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        scrollpane = new javax.swing.JScrollPane();
        DevsTable = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        ProyectosTable3 = new javax.swing.JTable();
        jComboBox4AB = new javax.swing.JComboBox<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextAreaAB = new javax.swing.JTextArea();
        jButton31 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTextArea2AB = new javax.swing.JTextArea();
        jScrollPane14 = new javax.swing.JScrollPane();
        jFormattedTextField2 = new javax.swing.JTextPane();
        jButtonFiltrar1 = new javax.swing.JButton();
        MenuPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        PaneMenus = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProyectosTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        BoxAbiertos = new javax.swing.JCheckBox();
        BoxFinalizados = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        BugsTable = new javax.swing.JTable();
        PaneNotificaciones = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ProyectosTable2 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ComentariosTextArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        ComentarioTextArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        ProyectosComboBox = new javax.swing.JComboBox<>();
        BoxAbiertos2 = new javax.swing.JCheckBox();
        BoxFinalizados2 = new javax.swing.JCheckBox();
        PanelCalendario = new javax.swing.JPanel();
        MonthChooser = new com.toedter.calendar.JMonthChooser();
        YearChooser = new com.toedter.calendar.JYearChooser();
        jButton14 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MesLabel = new javax.swing.JLabel();
        j1 = new javax.swing.JTextArea();
        j8 = new javax.swing.JTextArea();
        j15 = new javax.swing.JTextArea();
        j22 = new javax.swing.JTextArea();
        j29 = new javax.swing.JTextArea();
        j36 = new javax.swing.JTextArea();
        j37 = new javax.swing.JTextArea();
        j30 = new javax.swing.JTextArea();
        j23 = new javax.swing.JTextArea();
        j16 = new javax.swing.JTextArea();
        j9 = new javax.swing.JTextArea();
        j2 = new javax.swing.JTextArea();
        j38 = new javax.swing.JTextArea();
        j31 = new javax.swing.JTextArea();
        j24 = new javax.swing.JTextArea();
        j17 = new javax.swing.JTextArea();
        j10 = new javax.swing.JTextArea();
        j3 = new javax.swing.JTextArea();
        j39 = new javax.swing.JTextArea();
        j32 = new javax.swing.JTextArea();
        j25 = new javax.swing.JTextArea();
        j18 = new javax.swing.JTextArea();
        j11 = new javax.swing.JTextArea();
        j4 = new javax.swing.JTextArea();
        j40 = new javax.swing.JTextArea();
        j33 = new javax.swing.JTextArea();
        j26 = new javax.swing.JTextArea();
        j19 = new javax.swing.JTextArea();
        j12 = new javax.swing.JTextArea();
        j5 = new javax.swing.JTextArea();
        j41 = new javax.swing.JTextArea();
        j34 = new javax.swing.JTextArea();
        j27 = new javax.swing.JTextArea();
        j20 = new javax.swing.JTextArea();
        j13 = new javax.swing.JTextArea();
        j6 = new javax.swing.JTextArea();
        j42 = new javax.swing.JTextArea();
        j35 = new javax.swing.JTextArea();
        j28 = new javax.swing.JTextArea();
        j21 = new javax.swing.JTextArea();
        j14 = new javax.swing.JTextArea();
        j7 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        developerIDLabel = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jMainPanelAB = new javax.swing.JPanel();
        jMainPanelAB1 = new javax.swing.JPanel();
        jPanelGenerarBugAB = new javax.swing.JPanel();
        jLabel3AB = new javax.swing.JLabel();
        jScrollPane3AB = new javax.swing.JScrollPane();
        jTextArea3AB = new javax.swing.JTextArea();
        jComboBox1AB = new javax.swing.JComboBox<>();
        jComboBox2AB = new javax.swing.JComboBox<>();
        jLabel4AB = new javax.swing.JLabel();
        jButtonAB = new javax.swing.JButton();
        jLabel6AB = new javax.swing.JLabel();
        jLabel7AB = new javax.swing.JLabel();
        jSeparator2AB = new javax.swing.JSeparator();
        jPanelTablaAB = new javax.swing.JPanel();
        jScrollPane1AB = new javax.swing.JScrollPane();
        BugsTableAB = new javax.swing.JTable();
        jButtonFiltrarAB = new javax.swing.JButton();
        jComboBox3AB = new javax.swing.JComboBox<>();
        jScrollPane2AB = new javax.swing.JScrollPane();
        jFormattedTextField1AB = new javax.swing.JTextPane();
        jPanelComentariosAB = new javax.swing.JPanel();
        jScrollPane4AB = new javax.swing.JScrollPane();
        jTextArea2AB1 = new javax.swing.JTextArea();
        jLabel8AB = new javax.swing.JLabel();
        jSeparator3AB = new javax.swing.JSeparator();
        jScrollPane5AB = new javax.swing.JScrollPane();
        jTextAreaAB1 = new javax.swing.JTextArea();
        jButtonAgregarCommentAB = new javax.swing.JButton();
        jComboBox4AB1 = new javax.swing.JComboBox<>();
        jScrollPane6AB = new javax.swing.JScrollPane();
        ProyectosTableAB = new javax.swing.JTable();
        jLabel9AB = new javax.swing.JLabel();
        jButtonFiltrar1AB = new javax.swing.JButton();
        jScrollPane7AB = new javax.swing.JScrollPane();
        jFormattedTextField2AB = new javax.swing.JTextPane();
        menuPanelAB = new javax.swing.JPanel();
        JBCrearBugsAB = new javax.swing.JButton();
        JBMostrarTablaAB = new javax.swing.JButton();
        JBExportarPDFAB = new javax.swing.JButton();
        jLabel5AB = new javax.swing.JLabel();
        jLabel1AB = new javax.swing.JLabel();
        jLabel2AB = new javax.swing.JLabel();
        jSeparator1AB = new javax.swing.JSeparator();
        JBComentariosAB = new javax.swing.JButton();
        JBSignOutAB = new javax.swing.JButton();

        jPanel4.setBackground(new java.awt.Color(44, 47, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 68, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 153));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("ID:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nombre: ");

        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Lenguajes de Programacion: ");

        prograJT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prograJTActionPerformed(evt);
            }
        });

        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText("Tecnologias que domina: ");

        prograBut.setText("Add");
        prograBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prograButActionPerformed(evt);
            }
        });

        techBut.setText("Add");
        techBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techButActionPerformed(evt);
            }
        });

        finalAdd.setText("Finalizar");
        finalAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalAddActionPerformed(evt);
            }
        });

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(finalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(techsJT, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(techBut))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(prograJT, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prograBut))
                    .addComponent(nameJT, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idJT, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(idJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(prograJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prograBut))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(techsJT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(techBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(finalAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout addDevLayout = new javax.swing.GroupLayout(addDev.getContentPane());
        addDev.getContentPane().setLayout(addDevLayout);
        addDevLayout.setHorizontalGroup(
            addDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addDevLayout.setVerticalGroup(
            addDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));

        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("ID:");

        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Nombre: ");

        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText("Lenguajes de Programacion: ");

        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText("Tecnologias que domina: ");

        finalAdd1.setText("Finalizar");
        finalAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalAdd1ActionPerformed(evt);
            }
        });

        jButton3.setText("Volver");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        techBut1.setText("Add");
        techBut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techBut1ActionPerformed(evt);
            }
        });

        prograBut1.setText("Add");
        prograBut1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prograBut1ActionPerformed(evt);
            }
        });

        prograJT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prograJT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(finalAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(techsJT1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(techBut1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(prograJT1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prograBut1))
                    .addComponent(nameJT1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idJT1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(idJT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(nameJT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(prograJT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prograBut1))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(techsJT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(techBut1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalAdd1)
                    .addComponent(jButton3))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout modifDevLayout = new javax.swing.GroupLayout(modifDev.getContentPane());
        modifDev.getContentPane().setLayout(modifDevLayout);
        modifDevLayout.setHorizontalGroup(
            modifDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        modifDevLayout.setVerticalGroup(
            modifDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout elimDevLayout = new javax.swing.GroupLayout(elimDev.getContentPane());
        elimDev.getContentPane().setLayout(elimDevLayout);
        elimDevLayout.setHorizontalGroup(
            elimDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        elimDevLayout.setVerticalGroup(
            elimDevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout graphsPLayout = new javax.swing.GroupLayout(graphsP.getContentPane());
        graphsP.getContentPane().setLayout(graphsPLayout);
        graphsPLayout.setHorizontalGroup(
            graphsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        graphsPLayout.setVerticalGroup(
            graphsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bugsPLayout = new javax.swing.GroupLayout(bugsP.getContentPane());
        bugsP.getContentPane().setLayout(bugsPLayout);
        bugsPLayout.setHorizontalGroup(
            bugsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        bugsPLayout.setVerticalGroup(
            bugsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));

        proyecsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Proyecto", "Nombre", "Fecha Inicio", "Fecha Fin", "Equipo ID", "Bugs", "Bugs Finalizados"
            }
        ));
        jScrollPane6.setViewportView(proyecsTable);

        jPanel8.setBackground(new java.awt.Color(0, 0, 51));

        jButton15.setText("Crear");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Eliminar");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Modificar");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Proyectos de Software");

        jButton19.setText("Volver");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton19)
                        .addGap(127, 127, 127))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jButton19)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout proyecsPLayout = new javax.swing.GroupLayout(proyecsP.getContentPane());
        proyecsP.getContentPane().setLayout(proyecsPLayout);
        proyecsPLayout.setHorizontalGroup(
            proyecsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proyecsPLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        proyecsPLayout.setVerticalGroup(
            proyecsPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(proyecsPLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout softAddLayout = new javax.swing.GroupLayout(softAdd.getContentPane());
        softAdd.getContentPane().setLayout(softAddLayout);
        softAddLayout.setHorizontalGroup(
            softAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        softAddLayout.setVerticalGroup(
            softAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel10.setBackground(new java.awt.Color(0, 0, 51));

        jButton20.setText("Crear");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Eliminar");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Equipo de Desarrolladores");

        jButton23.setText("Volver");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        devsTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Username", "Lenguajes Dominados", "Tecnologias Dominadas", "Equipo"
            }
        ));
        panelshow2.setViewportView(devsTable2);

        teamsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Equipo", "Codigo Developer", "Codigo Proyecto"
            }
        ));
        jScrollPane7.setViewportView(teamsTable);

        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setText("Agregar Dev");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(panelshow2, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(135, 135, 135))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                        .addComponent(jLabel32)
                                        .addGap(39, 39, 39)))
                                .addGap(0, 12, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton23)
                        .addGap(165, 165, 165))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelshow2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                        .addComponent(jButton23)))
                .addContainerGap())
        );

        javax.swing.GroupLayout DevsLayout = new javax.swing.GroupLayout(Devs.getContentPane());
        Devs.getContentPane().setLayout(DevsLayout);
        DevsLayout.setHorizontalGroup(
            DevsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DevsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        DevsLayout.setVerticalGroup(
            DevsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(204, 255, 204));

        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Codigo de Proyecto: ");

        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Nombre del Proyecto:");

        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText("Fecha Inicio: ");

        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Equipo de desarrolladores: ");

        proyName.setBackground(new java.awt.Color(255, 255, 255));
        proyName.setForeground(new java.awt.Color(0, 0, 0));

        proyCode.setBackground(new java.awt.Color(255, 255, 255));
        proyCode.setForeground(new java.awt.Color(0, 0, 0));

        jButton26.setText("Finalizar");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Fecha Final: ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addGap(165, 165, 165))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(proyName)
                    .addComponent(proyCode)
                    .addComponent(comboDevs, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Chooser, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(Chooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proyCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Chooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDevs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton26)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout crearProyecsLayout = new javax.swing.GroupLayout(crearProyecs.getContentPane());
        crearProyecs.getContentPane().setLayout(crearProyecsLayout);
        crearProyecsLayout.setHorizontalGroup(
            crearProyecsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        crearProyecsLayout.setVerticalGroup(
            crearProyecsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GraphsLayout = new javax.swing.GroupLayout(Graphs.getContentPane());
        Graphs.getContentPane().setLayout(GraphsLayout);
        GraphsLayout.setHorizontalGroup(
            GraphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        GraphsLayout.setVerticalGroup(
            GraphsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));

        bugsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Urgencia"
            }
        ));
        jScrollPane8.setViewportView(bugsTable);

        jButton27.setText("Volver");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setText("Asignar");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        devieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username"
            }
        ));
        jScrollPane9.setViewportView(devieTable);

        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton27)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton27)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bugssLayout = new javax.swing.GroupLayout(bugss.getContentPane());
        bugss.getContentPane().setLayout(bugssLayout);
        bugssLayout.setHorizontalGroup(
            bugssLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bugssLayout.setVerticalGroup(
            bugssLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText("Username:");

        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setText("Password:");

        jLabel40.setForeground(new java.awt.Color(0, 0, 0));
        jLabel40.setText("Nombre Completo: ");

        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText("Rol: ");

        rolsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desarrollador", "Analista" }));

        jButton30.setText("Agregar");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(userNTF, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(passNTF, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addGap(101, 101, 101)))
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameNTF, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(rolsCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton30)
                .addGap(151, 151, 151))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(userNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(passNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(nameNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(rolsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jButton30)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addUserLayout = new javax.swing.GroupLayout(addUser.getContentPane());
        addUser.getContentPane().setLayout(addUserLayout);
        addUserLayout.setHorizontalGroup(
            addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addUserLayout.setVerticalGroup(
            addUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(47, 62, 70));
        setMinimumSize(new java.awt.Dimension(1086, 680));

        MainPanel.setPreferredSize(new java.awt.Dimension(1086, 680));
        MainPanel.setLayout(new java.awt.CardLayout());

        SignInPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teoria/pkg1/soft/devel/logo blanco mini.png"))); // NOI18N
        SignInPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teoria/pkg1/soft/devel/IMG_6017-1024x683.jpg"))); // NOI18N
        jLabel8.setText("jLabel1");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel8.setMaximumSize(new java.awt.Dimension(550, 683));
        jLabel8.setMinimumSize(new java.awt.Dimension(550, 683));
        jLabel8.setPreferredSize(new java.awt.Dimension(550, 683));
        SignInPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 680));

        jPanel3.setBackground(new java.awt.Color(44, 47, 51));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 44)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(114, 137, 218));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("BUGTRACKER");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(114, 137, 218));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("USERNAME:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 44)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(114, 137, 218));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("SOFTWARE");

        UsuarioTextField.setBackground(new java.awt.Color(44, 47, 51));
        UsuarioTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        UsuarioTextField.setForeground(new java.awt.Color(255, 255, 255));
        UsuarioTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UsuarioTextField.setAutoscrolls(false);
        UsuarioTextField.setBorder(null);
        UsuarioTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuarioTextFieldActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(50, 20));

        jButton4.setBackground(new java.awt.Color(114, 137, 218));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("SIGN IN");
        jButton4.setBorder(null);
        jButton4.setFocusPainted(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("VERSION 1.0.12");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("POR: JOSUE ESPINAL. ADRIAN BURGOS Y EDUARDO AGUILAR");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("JOSUKE++");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(114, 137, 218));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("PASSWORD:");

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jSeparator3.setPreferredSize(new java.awt.Dimension(50, 20));

        PasswordTextField.setBackground(new java.awt.Color(44, 47, 51));
        PasswordTextField.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PasswordTextField.setForeground(new java.awt.Color(255, 255, 255));
        PasswordTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PasswordTextField.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 251, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(426, 498, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PasswordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(UsuarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(182, 182, 182))))))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UsuarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addGap(12, 12, 12)
                .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(10, 10, 10))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addComponent(jLabel12)
                    .addContainerGap(534, Short.MAX_VALUE)))
        );

        SignInPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 600, 680));

        MainPanel.add(SignInPanel, "SignInPanel");

        jTabbedPane2.setBackground(new java.awt.Color(102, 102, 102));
        jTabbedPane2.setForeground(new java.awt.Color(0, 0, 0));
        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(204, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));

        bugsbut.setText("Asignar Bugs");
        bugsbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bugsbutActionPerformed(evt);
            }
        });

        graphbut.setText("Gráficos ");
        graphbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphbutActionPerformed(evt);
            }
        });

        elimde.setText("Eliminar Desarrollador");
        elimde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elimdeActionPerformed(evt);
            }
        });

        modifde.setText("Modificar Desarrollador");
        modifde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifdeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrador de Desarrollo");

        proyecsde.setText("Proyectos de Software");
        proyecsde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proyecsdeActionPerformed(evt);
            }
        });

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        proyecsde1.setText("Equipo de Desarrolladores");
        proyecsde1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proyecsde1ActionPerformed(evt);
            }
        });

        agregde1.setText("Modif. User");
        agregde1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregde1ActionPerformed(evt);
            }
        });

        agregde2.setText("Agregar User");
        agregde2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregde2ActionPerformed(evt);
            }
        });

        agregde3.setText("Del. User");
        agregde3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregde3ActionPerformed(evt);
            }
        });

        jButton32.setBackground(new java.awt.Color(114, 137, 218));
        jButton32.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton32.setForeground(new java.awt.Color(255, 255, 255));
        jButton32.setText("SIGN OUT");
        jButton32.setBorder(null);
        jButton32.setFocusPainted(false);
        jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton32MouseClicked(evt);
            }
        });
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(agregde1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(proyecsde, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bugsbut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(modifde, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addComponent(agregde2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(elimde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(graphbut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(proyecsde1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agregde3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(agregde2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(agregde1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(agregde3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(modifde, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(elimde, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(graphbut, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bugsbut, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(proyecsde, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(proyecsde1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DevsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Username", "Lenguajes Dominados", "Tecnologias Dominadas", "Equipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollpane.setViewportView(DevsTable);

        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Nombre Completo", "Rol"
            }
        ));
        jScrollPane10.setViewportView(usersTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE))
                .addGap(56, 56, 56)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Adminstracion", jPanel1);

        jPanel15.setBackground(new java.awt.Color(51, 51, 51));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(158, 173, 229));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Proyectos:");

        jScrollPane11.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ProyectosTable3.setBackground(new java.awt.Color(247, 247, 247));
        ProyectosTable3.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ProyectosTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProyectosTable3.setGridColor(new java.awt.Color(247, 247, 247));
        ProyectosTable3.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane11.setViewportView(ProyectosTable3);

        jComboBox4AB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox4AB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox4AB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ABActionPerformed(evt);
            }
        });

        jTextAreaAB.setColumns(20);
        jTextAreaAB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextAreaAB.setLineWrap(true);
        jTextAreaAB.setRows(5);
        jTextAreaAB.setWrapStyleWord(true);
        jScrollPane12.setViewportView(jTextAreaAB);

        jButton31.setBackground(new java.awt.Color(114, 137, 218));
        jButton31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton31.setForeground(new java.awt.Color(255, 255, 255));
        jButton31.setText("Agregar Comentario");
        jButton31.setBorder(null);
        jButton31.setFocusPainted(false);
        jButton31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton31MouseClicked(evt);
            }
        });
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jTextArea2AB.setColumns(20);
        jTextArea2AB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextArea2AB.setRows(5);
        jScrollPane13.setViewportView(jTextArea2AB);

        jScrollPane14.setViewportView(jFormattedTextField2);

        jButtonFiltrar1.setText("Filtrar");
        jButtonFiltrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(549, 549, 549)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFiltrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jComboBox4AB, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)))
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jComboBox4AB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonFiltrar1)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Comentarios", jPanel15);

        javax.swing.GroupLayout AdminPanelLayout = new javax.swing.GroupLayout(AdminPanel);
        AdminPanel.setLayout(AdminPanelLayout);
        AdminPanelLayout.setHorizontalGroup(
            AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1180, Short.MAX_VALUE)
            .addGroup(AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AdminPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        AdminPanelLayout.setVerticalGroup(
            AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
            .addGroup(AdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AdminPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        MainPanel.add(AdminPanel, "AdminPanel");

        MenuPanel.setBackground(new java.awt.Color(44, 47, 51));
        MenuPanel.setMaximumSize(new java.awt.Dimension(1090, 680));
        MenuPanel.setMinimumSize(new java.awt.Dimension(1090, 680));
        MenuPanel.setPreferredSize(new java.awt.Dimension(1090, 680));

        jTabbedPane1.setBackground(new java.awt.Color(44, 47, 51));
        jTabbedPane1.setForeground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        PaneMenus.setBackground(new java.awt.Color(44, 47, 51));
        PaneMenus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jScrollPane2.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ProyectosTable.setBackground(new java.awt.Color(247, 247, 247));
        ProyectosTable.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ProyectosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProyectosTable.setGridColor(new java.awt.Color(247, 247, 247));
        ProyectosTable.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane2.setViewportView(ProyectosTable);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(158, 173, 229));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Proyectos:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(158, 173, 229));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Lista de Bugs:");

        jButton6.setBackground(new java.awt.Color(114, 137, 218));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Finalizar Bug");
        jButton6.setBorder(null);
        jButton6.setFocusPainted(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(114, 137, 218));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Asignar Fecha");
        jButton7.setBorder(null);
        jButton7.setFocusPainted(false);
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(114, 137, 218));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Sync Tabla");
        jButton8.setBorder(null);
        jButton8.setFocusPainted(false);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        DateChooser.setDateFormatString("yyyy-MM-dd");
        DateChooser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        BoxAbiertos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BoxAbiertos.setForeground(new java.awt.Color(255, 255, 255));
        BoxAbiertos.setText("ABIERTOS");
        BoxAbiertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxAbiertosActionPerformed(evt);
            }
        });

        BoxFinalizados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BoxFinalizados.setForeground(new java.awt.Color(255, 255, 255));
        BoxFinalizados.setText("FINALIZADOS");
        BoxFinalizados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxFinalizadosActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        BugsTable.setBackground(new java.awt.Color(247, 247, 247));
        BugsTable.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        BugsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Cod. Proyecto", "Niv. Urgencia", "Estado", "Fecha de Inicio", "Fecha de Finalizacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BugsTable.setGridColor(new java.awt.Color(247, 247, 247));
        BugsTable.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane1.setViewportView(BugsTable);

        javax.swing.GroupLayout PaneMenusLayout = new javax.swing.GroupLayout(PaneMenus);
        PaneMenus.setLayout(PaneMenusLayout);
        PaneMenusLayout.setHorizontalGroup(
            PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneMenusLayout.createSequentialGroup()
                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneMenusLayout.createSequentialGroup()
                        .addGap(780, 780, 780)
                        .addComponent(BoxAbiertos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoxFinalizados, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PaneMenusLayout.createSequentialGroup()
                        .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PaneMenusLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)))
                            .addGroup(PaneMenusLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE))))
                .addContainerGap())
        );
        PaneMenusLayout.setVerticalGroup(
            PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneMenusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneMenusLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PaneMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BoxAbiertos)
                    .addComponent(BoxFinalizados))
                .addContainerGap())
        );

        jTabbedPane1.addTab("LISTA DE BUGS", PaneMenus);

        PaneNotificaciones.setBackground(new java.awt.Color(44, 47, 51));

        jButton9.setBackground(new java.awt.Color(114, 137, 218));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Filtrar");
        jButton9.setBorder(null);
        jButton9.setFocusPainted(false);
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(114, 137, 218));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Agregar Comentario");
        jButton10.setBorder(null);
        jButton10.setFocusPainted(false);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jScrollPane5.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ProyectosTable2.setBackground(new java.awt.Color(247, 247, 247));
        ProyectosTable2.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ProyectosTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProyectosTable2.setGridColor(new java.awt.Color(247, 247, 247));
        ProyectosTable2.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane5.setViewportView(ProyectosTable2);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(158, 173, 229));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Proyectos:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(158, 173, 229));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Comentarios:");

        jButton11.setBackground(new java.awt.Color(114, 137, 218));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Sync Tabla");
        jButton11.setBorder(null);
        jButton11.setFocusPainted(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(114, 137, 218));
        jButton12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Todos");
        jButton12.setBorder(null);
        jButton12.setFocusPainted(false);
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        ComentariosTextArea.setColumns(20);
        ComentariosTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComentariosTextArea.setRows(5);
        jScrollPane3.setViewportView(ComentariosTextArea);

        ComentarioTextArea.setColumns(20);
        ComentarioTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComentarioTextArea.setLineWrap(true);
        ComentarioTextArea.setRows(5);
        ComentarioTextArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(ComentarioTextArea);

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        ProyectosComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ProyectosComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProyectosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProyectosComboBoxActionPerformed(evt);
            }
        });

        BoxAbiertos2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BoxAbiertos2.setForeground(new java.awt.Color(255, 255, 255));
        BoxAbiertos2.setSelected(true);
        BoxAbiertos2.setText("ABIERTOS");
        BoxAbiertos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxAbiertos2ActionPerformed(evt);
            }
        });

        BoxFinalizados2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BoxFinalizados2.setForeground(new java.awt.Color(255, 255, 255));
        BoxFinalizados2.setSelected(true);
        BoxFinalizados2.setText("FINALIZADOS");
        BoxFinalizados2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoxFinalizados2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PaneNotificacionesLayout = new javax.swing.GroupLayout(PaneNotificaciones);
        PaneNotificaciones.setLayout(PaneNotificacionesLayout);
        PaneNotificacionesLayout.setHorizontalGroup(
            PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(ProyectosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                        .addGap(0, 558, Short.MAX_VALUE)
                        .addComponent(BoxAbiertos2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoxFinalizados2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
            .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 76, Short.MAX_VALUE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(6, 6, 6)))
        );
        PaneNotificacionesLayout.setVerticalGroup(
            PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProyectosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BoxAbiertos2)
                        .addComponent(BoxFinalizados2))
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PaneNotificacionesLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(PaneNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jLabel20))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(320, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("TABLERO DE NOTIFICACIONES", PaneNotificaciones);

        PanelCalendario.setBackground(new java.awt.Color(44, 47, 51));

        MonthChooser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton14.setBackground(new java.awt.Color(114, 137, 218));
        jButton14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("Generar Calendario");
        jButton14.setBorder(null);
        jButton14.setFocusPainted(false);
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(114, 137, 218));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Domingo");

        MesLabel.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        MesLabel.setForeground(new java.awt.Color(114, 137, 218));
        MesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MesLabel.setText("MES");

        j1.setEditable(false);
        j1.setBackground(new java.awt.Color(204, 204, 204));
        j1.setColumns(20);
        j1.setForeground(new java.awt.Color(0, 0, 0));
        j1.setRows(5);
        j1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        j8.setEditable(false);
        j8.setBackground(new java.awt.Color(204, 204, 204));
        j8.setColumns(20);
        j8.setForeground(new java.awt.Color(0, 0, 0));
        j8.setRows(5);
        j8.setBorder(null);

        j15.setEditable(false);
        j15.setBackground(new java.awt.Color(204, 204, 204));
        j15.setColumns(20);
        j15.setForeground(new java.awt.Color(0, 0, 0));
        j15.setRows(5);
        j15.setBorder(null);

        j22.setEditable(false);
        j22.setBackground(new java.awt.Color(204, 204, 204));
        j22.setColumns(20);
        j22.setForeground(new java.awt.Color(0, 0, 0));
        j22.setRows(5);
        j22.setBorder(null);

        j29.setEditable(false);
        j29.setBackground(new java.awt.Color(204, 204, 204));
        j29.setColumns(20);
        j29.setForeground(new java.awt.Color(0, 0, 0));
        j29.setRows(5);
        j29.setBorder(null);

        j36.setEditable(false);
        j36.setBackground(new java.awt.Color(204, 204, 204));
        j36.setColumns(20);
        j36.setForeground(new java.awt.Color(0, 0, 0));
        j36.setRows(5);
        j36.setBorder(null);

        j37.setEditable(false);
        j37.setBackground(new java.awt.Color(204, 204, 204));
        j37.setColumns(20);
        j37.setForeground(new java.awt.Color(0, 0, 0));
        j37.setRows(5);
        j37.setBorder(null);

        j30.setEditable(false);
        j30.setBackground(new java.awt.Color(204, 204, 204));
        j30.setColumns(20);
        j30.setForeground(new java.awt.Color(0, 0, 0));
        j30.setRows(5);
        j30.setBorder(null);

        j23.setEditable(false);
        j23.setBackground(new java.awt.Color(204, 204, 204));
        j23.setColumns(20);
        j23.setForeground(new java.awt.Color(0, 0, 0));
        j23.setRows(5);
        j23.setBorder(null);

        j16.setEditable(false);
        j16.setBackground(new java.awt.Color(204, 204, 204));
        j16.setColumns(20);
        j16.setForeground(new java.awt.Color(0, 0, 0));
        j16.setRows(5);
        j16.setBorder(null);

        j9.setEditable(false);
        j9.setBackground(new java.awt.Color(204, 204, 204));
        j9.setColumns(20);
        j9.setForeground(new java.awt.Color(0, 0, 0));
        j9.setRows(5);
        j9.setBorder(null);

        j2.setEditable(false);
        j2.setBackground(new java.awt.Color(204, 204, 204));
        j2.setColumns(20);
        j2.setForeground(new java.awt.Color(0, 0, 0));
        j2.setRows(5);
        j2.setBorder(null);

        j38.setEditable(false);
        j38.setBackground(new java.awt.Color(204, 204, 204));
        j38.setColumns(20);
        j38.setForeground(new java.awt.Color(0, 0, 0));
        j38.setRows(5);
        j38.setBorder(null);

        j31.setEditable(false);
        j31.setBackground(new java.awt.Color(204, 204, 204));
        j31.setColumns(20);
        j31.setForeground(new java.awt.Color(0, 0, 0));
        j31.setRows(5);
        j31.setBorder(null);

        j24.setEditable(false);
        j24.setBackground(new java.awt.Color(204, 204, 204));
        j24.setColumns(20);
        j24.setForeground(new java.awt.Color(0, 0, 0));
        j24.setRows(5);
        j24.setBorder(null);

        j17.setEditable(false);
        j17.setBackground(new java.awt.Color(204, 204, 204));
        j17.setColumns(20);
        j17.setForeground(new java.awt.Color(0, 0, 0));
        j17.setRows(5);
        j17.setBorder(null);

        j10.setEditable(false);
        j10.setBackground(new java.awt.Color(204, 204, 204));
        j10.setColumns(20);
        j10.setForeground(new java.awt.Color(0, 0, 0));
        j10.setRows(5);
        j10.setBorder(null);

        j3.setEditable(false);
        j3.setBackground(new java.awt.Color(204, 204, 204));
        j3.setColumns(20);
        j3.setForeground(new java.awt.Color(0, 0, 0));
        j3.setRows(5);
        j3.setBorder(null);

        j39.setEditable(false);
        j39.setBackground(new java.awt.Color(204, 204, 204));
        j39.setColumns(20);
        j39.setForeground(new java.awt.Color(0, 0, 0));
        j39.setRows(5);
        j39.setBorder(null);

        j32.setEditable(false);
        j32.setBackground(new java.awt.Color(204, 204, 204));
        j32.setColumns(20);
        j32.setForeground(new java.awt.Color(0, 0, 0));
        j32.setRows(5);
        j32.setBorder(null);

        j25.setEditable(false);
        j25.setBackground(new java.awt.Color(204, 204, 204));
        j25.setColumns(20);
        j25.setForeground(new java.awt.Color(0, 0, 0));
        j25.setRows(5);
        j25.setBorder(null);

        j18.setEditable(false);
        j18.setBackground(new java.awt.Color(204, 204, 204));
        j18.setColumns(20);
        j18.setForeground(new java.awt.Color(0, 0, 0));
        j18.setRows(5);
        j18.setBorder(null);

        j11.setEditable(false);
        j11.setBackground(new java.awt.Color(204, 204, 204));
        j11.setColumns(20);
        j11.setForeground(new java.awt.Color(0, 0, 0));
        j11.setRows(5);
        j11.setBorder(null);

        j4.setEditable(false);
        j4.setBackground(new java.awt.Color(204, 204, 204));
        j4.setColumns(20);
        j4.setForeground(new java.awt.Color(0, 0, 0));
        j4.setRows(5);
        j4.setBorder(null);

        j40.setEditable(false);
        j40.setBackground(new java.awt.Color(204, 204, 204));
        j40.setColumns(20);
        j40.setForeground(new java.awt.Color(0, 0, 0));
        j40.setRows(5);
        j40.setBorder(null);

        j33.setEditable(false);
        j33.setBackground(new java.awt.Color(204, 204, 204));
        j33.setColumns(20);
        j33.setForeground(new java.awt.Color(0, 0, 0));
        j33.setRows(5);
        j33.setBorder(null);

        j26.setEditable(false);
        j26.setBackground(new java.awt.Color(204, 204, 204));
        j26.setColumns(20);
        j26.setForeground(new java.awt.Color(0, 0, 0));
        j26.setRows(5);
        j26.setBorder(null);

        j19.setEditable(false);
        j19.setBackground(new java.awt.Color(204, 204, 204));
        j19.setColumns(20);
        j19.setForeground(new java.awt.Color(0, 0, 0));
        j19.setRows(5);
        j19.setBorder(null);

        j12.setEditable(false);
        j12.setBackground(new java.awt.Color(204, 204, 204));
        j12.setColumns(20);
        j12.setForeground(new java.awt.Color(0, 0, 0));
        j12.setRows(5);
        j12.setBorder(null);

        j5.setEditable(false);
        j5.setBackground(new java.awt.Color(204, 204, 204));
        j5.setColumns(20);
        j5.setForeground(new java.awt.Color(0, 0, 0));
        j5.setRows(5);
        j5.setBorder(null);

        j41.setEditable(false);
        j41.setBackground(new java.awt.Color(204, 204, 204));
        j41.setColumns(20);
        j41.setForeground(new java.awt.Color(0, 0, 0));
        j41.setRows(5);
        j41.setBorder(null);

        j34.setEditable(false);
        j34.setBackground(new java.awt.Color(204, 204, 204));
        j34.setColumns(20);
        j34.setForeground(new java.awt.Color(0, 0, 0));
        j34.setRows(5);
        j34.setBorder(null);

        j27.setEditable(false);
        j27.setBackground(new java.awt.Color(204, 204, 204));
        j27.setColumns(20);
        j27.setForeground(new java.awt.Color(0, 0, 0));
        j27.setRows(5);
        j27.setBorder(null);

        j20.setEditable(false);
        j20.setBackground(new java.awt.Color(204, 204, 204));
        j20.setColumns(20);
        j20.setForeground(new java.awt.Color(0, 0, 0));
        j20.setRows(5);
        j20.setBorder(null);

        j13.setEditable(false);
        j13.setBackground(new java.awt.Color(204, 204, 204));
        j13.setColumns(20);
        j13.setForeground(new java.awt.Color(0, 0, 0));
        j13.setRows(5);
        j13.setBorder(null);

        j6.setEditable(false);
        j6.setBackground(new java.awt.Color(204, 204, 204));
        j6.setColumns(20);
        j6.setForeground(new java.awt.Color(0, 0, 0));
        j6.setRows(5);
        j6.setBorder(null);

        j42.setEditable(false);
        j42.setBackground(new java.awt.Color(204, 204, 204));
        j42.setColumns(20);
        j42.setForeground(new java.awt.Color(0, 0, 0));
        j42.setRows(5);
        j42.setBorder(null);

        j35.setEditable(false);
        j35.setBackground(new java.awt.Color(204, 204, 204));
        j35.setColumns(20);
        j35.setForeground(new java.awt.Color(0, 0, 0));
        j35.setRows(5);
        j35.setBorder(null);

        j28.setEditable(false);
        j28.setBackground(new java.awt.Color(204, 204, 204));
        j28.setColumns(20);
        j28.setForeground(new java.awt.Color(0, 0, 0));
        j28.setRows(5);
        j28.setBorder(null);

        j21.setEditable(false);
        j21.setBackground(new java.awt.Color(204, 204, 204));
        j21.setColumns(20);
        j21.setForeground(new java.awt.Color(0, 0, 0));
        j21.setRows(5);
        j21.setBorder(null);

        j14.setEditable(false);
        j14.setBackground(new java.awt.Color(204, 204, 204));
        j14.setColumns(20);
        j14.setForeground(new java.awt.Color(0, 0, 0));
        j14.setRows(5);
        j14.setBorder(null);

        j7.setEditable(false);
        j7.setBackground(new java.awt.Color(204, 204, 204));
        j7.setColumns(20);
        j7.setForeground(new java.awt.Color(0, 0, 0));
        j7.setRows(5);
        j7.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(114, 137, 218));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Miercoles");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(114, 137, 218));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Martes");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(114, 137, 218));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Viernes");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(114, 137, 218));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Jueves");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(114, 137, 218));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Lunes");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(114, 137, 218));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Sabado");

        javax.swing.GroupLayout PanelCalendarioLayout = new javax.swing.GroupLayout(PanelCalendario);
        PanelCalendario.setLayout(PanelCalendarioLayout);
        PanelCalendarioLayout.setHorizontalGroup(
            PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCalendarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(YearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(762, Short.MAX_VALUE))
            .addComponent(MesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCalendarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PanelCalendarioLayout.createSequentialGroup()
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(j1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(j8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(j15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(j22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(j29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(j36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j23, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j30, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j37, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j24, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j31, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j38, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j25, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j32, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j39, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j26, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j33, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j40, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j27, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j34, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j41, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelCalendarioLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j21, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j28, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j35, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j42, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        PanelCalendarioLayout.setVerticalGroup(
            PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCalendarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MonthChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(YearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanelCalendarioLayout.createSequentialGroup()
                        .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j25, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j32, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j39, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PanelCalendarioLayout.createSequentialGroup()
                            .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j15, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j22, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j29, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j36, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanelCalendarioLayout.createSequentialGroup()
                            .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j23, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j30, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j37, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PanelCalendarioLayout.createSequentialGroup()
                            .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j24, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j31, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(j38, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelCalendarioLayout.createSequentialGroup()
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel9)
                            .addComponent(jLabel22)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel24)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelCalendarioLayout.createSequentialGroup()
                                .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j27, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j34, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j41, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCalendarioLayout.createSequentialGroup()
                                .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j26, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j33, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j40, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCalendarioLayout.createSequentialGroup()
                                .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j21, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j28, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j35, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(j42, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(15, 15, 15))
        );

        jTabbedPane1.addTab("CALENDARIO", PanelCalendario);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(114, 137, 218));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("DEVELOPER:");

        developerIDLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        developerIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        developerIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        developerIDLabel.setText("DeveloperID");

        jButton5.setBackground(new java.awt.Color(114, 137, 218));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("SIGN OUT");
        jButton5.setBorder(null);
        jButton5.setFocusPainted(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(developerIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MenuPanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(developerIDLabel)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        MainPanel.add(MenuPanel, "MenuPanel");

        jMainPanelAB1.setLayout(new java.awt.CardLayout());

        jLabel3AB.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel3AB.setText("GENERAR BUG");

        jTextArea3AB.setColumns(20);
        jTextArea3AB.setRows(5);
        jScrollPane3AB.setViewportView(jTextArea3AB);

        jComboBox2AB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nivel 1", "Nivel 2", "Nivel 3", "Nivel 4", "Nivel 5" }));

        jLabel4AB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4AB.setText("Descripcion:");

        jButtonAB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButtonAB.setText("Generar");
        jButtonAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonABActionPerformed(evt);
            }
        });

        jLabel6AB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6AB.setText("Proyecto al que pertenece:");

        jLabel7AB.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7AB.setText("Nivel de urgencia:");

        javax.swing.GroupLayout jPanelGenerarBugABLayout = new javax.swing.GroupLayout(jPanelGenerarBugAB);
        jPanelGenerarBugAB.setLayout(jPanelGenerarBugABLayout);
        jPanelGenerarBugABLayout.setHorizontalGroup(
            jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4AB))
                        .addGap(49, 49, 49)
                        .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6AB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7AB)
                            .addComponent(jButtonAB)
                            .addComponent(jComboBox1AB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2AB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2AB)
                            .addComponent(jLabel3AB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        jPanelGenerarBugABLayout.setVerticalGroup(
            jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4AB)
                            .addComponent(jLabel6AB)))
                    .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2AB, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelGenerarBugABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGenerarBugABLayout.createSequentialGroup()
                        .addComponent(jComboBox1AB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7AB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2AB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonAB))
                    .addComponent(jScrollPane3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jMainPanelAB1.add(jPanelGenerarBugAB, "card2");

        jScrollPane1AB.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane1AB.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        BugsTableAB.setBackground(new java.awt.Color(247, 247, 247));
        BugsTableAB.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        BugsTableAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Desarrollador", "Codigo", "Descripcion", "Cod. Proyecto", "Niv. Urgencia", "Estado", "Fecha Inicio", "Fecha Finalizacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BugsTableAB.setGridColor(new java.awt.Color(247, 247, 247));
        BugsTableAB.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane1AB.setViewportView(BugsTableAB);

        jButtonFiltrarAB.setText("Filtrar");
        jButtonFiltrarAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarABActionPerformed(evt);
            }
        });

        jComboBox3AB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo del proyecto", "Nombre del desarrollador" }));

        jScrollPane2AB.setViewportView(jFormattedTextField1AB);

        javax.swing.GroupLayout jPanelTablaABLayout = new javax.swing.GroupLayout(jPanelTablaAB);
        jPanelTablaAB.setLayout(jPanelTablaABLayout);
        jPanelTablaABLayout.setHorizontalGroup(
            jPanelTablaABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaABLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(jPanelTablaABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1AB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaABLayout.createSequentialGroup()
                        .addComponent(jComboBox3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2AB, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFiltrarAB, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelTablaABLayout.setVerticalGroup(
            jPanelTablaABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaABLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelTablaABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonFiltrarAB, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jComboBox3AB)
                    .addComponent(jScrollPane2AB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1AB, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMainPanelAB1.add(jPanelTablaAB, "card3");

        jTextArea2AB1.setColumns(20);
        jTextArea2AB1.setRows(5);
        jScrollPane4AB.setViewportView(jTextArea2AB1);

        jLabel8AB.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel8AB.setText("Comentarios");

        jTextAreaAB1.setColumns(20);
        jTextAreaAB1.setRows(5);
        jScrollPane5AB.setViewportView(jTextAreaAB1);

        jButtonAgregarCommentAB.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonAgregarCommentAB.setText("Agregar Comentario");
        jButtonAgregarCommentAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarCommentABActionPerformed(evt);
            }
        });

        jComboBox4AB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jScrollPane6AB.setBackground(new java.awt.Color(247, 247, 247));
        jScrollPane6AB.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ProyectosTableAB.setBackground(new java.awt.Color(247, 247, 247));
        ProyectosTableAB.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        ProyectosTableAB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProyectosTableAB.setGridColor(new java.awt.Color(247, 247, 247));
        ProyectosTableAB.setSelectionBackground(new java.awt.Color(114, 137, 218));
        jScrollPane6AB.setViewportView(ProyectosTableAB);

        jLabel9AB.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel9AB.setText("Proyectos:");

        jButtonFiltrar1AB.setText("Filtrar");
        jButtonFiltrar1AB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrar1ABActionPerformed(evt);
            }
        });

        jScrollPane7AB.setViewportView(jFormattedTextField2AB);

        javax.swing.GroupLayout jPanelComentariosABLayout = new javax.swing.GroupLayout(jPanelComentariosAB);
        jPanelComentariosAB.setLayout(jPanelComentariosABLayout);
        jPanelComentariosABLayout.setHorizontalGroup(
            jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                        .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jButtonAgregarCommentAB)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox4AB1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5AB)))
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane6AB, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4AB, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                        .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addGap(275, 275, 275)
                                .addComponent(jLabel8AB))
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addGap(266, 266, 266)
                                .addComponent(jSeparator3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel9AB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane7AB, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFiltrar1AB, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelComentariosABLayout.setVerticalGroup(
            jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelComentariosABLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel8AB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3AB, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane7AB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9AB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFiltrar1AB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelComentariosABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelComentariosABLayout.createSequentialGroup()
                        .addComponent(jScrollPane6AB, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4AB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5AB, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAgregarCommentAB))
                    .addComponent(jScrollPane4AB))
                .addGap(11, 11, 11))
        );

        jMainPanelAB1.add(jPanelComentariosAB, "card4");

        menuPanelAB.setBackground(new java.awt.Color(13, 19, 33));

        JBCrearBugsAB.setBackground(new java.awt.Color(13, 19, 33));
        JBCrearBugsAB.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        JBCrearBugsAB.setForeground(new java.awt.Color(240, 235, 216));
        JBCrearBugsAB.setText("Crear Bug");
        JBCrearBugsAB.setToolTipText("");
        JBCrearBugsAB.setBorder(null);
        JBCrearBugsAB.setBorderPainted(false);
        JBCrearBugsAB.setFocusPainted(false);
        JBCrearBugsAB.setOpaque(true);
        JBCrearBugsAB.setSelected(true);
        JBCrearBugsAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCrearBugsABActionPerformed(evt);
            }
        });

        JBMostrarTablaAB.setBackground(new java.awt.Color(13, 19, 33));
        JBMostrarTablaAB.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        JBMostrarTablaAB.setForeground(new java.awt.Color(240, 235, 216));
        JBMostrarTablaAB.setText("Mostrar Tabla");
        JBMostrarTablaAB.setBorderPainted(false);
        JBMostrarTablaAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBMostrarTablaABActionPerformed(evt);
            }
        });

        JBExportarPDFAB.setBackground(new java.awt.Color(13, 19, 33));
        JBExportarPDFAB.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        JBExportarPDFAB.setForeground(new java.awt.Color(240, 235, 216));
        JBExportarPDFAB.setText("Exportar a PDF");
        JBExportarPDFAB.setBorderPainted(false);
        JBExportarPDFAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBExportarPDFABActionPerformed(evt);
            }
        });

        jLabel1AB.setForeground(new java.awt.Color(240, 235, 216));
        jLabel1AB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1AB.setText("Adrian Burgos | Eduardo Aguilar | Josue Espinal");

        jLabel2AB.setBackground(new java.awt.Color(240, 235, 216));
        jLabel2AB.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel2AB.setForeground(new java.awt.Color(240, 235, 216));
        jLabel2AB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2AB.setText("ANALISTA DE QA");
        jLabel2AB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2ABMouseClicked(evt);
            }
        });

        JBComentariosAB.setBackground(new java.awt.Color(13, 19, 33));
        JBComentariosAB.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        JBComentariosAB.setForeground(new java.awt.Color(240, 235, 216));
        JBComentariosAB.setText("Comentarios");
        JBComentariosAB.setBorderPainted(false);
        JBComentariosAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBComentariosABActionPerformed(evt);
            }
        });

        JBSignOutAB.setBackground(new java.awt.Color(13, 19, 33));
        JBSignOutAB.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        JBSignOutAB.setForeground(new java.awt.Color(240, 235, 216));
        JBSignOutAB.setText("Sign Out");
        JBSignOutAB.setBorderPainted(false);
        JBSignOutAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSignOutABActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelABLayout = new javax.swing.GroupLayout(menuPanelAB);
        menuPanelAB.setLayout(menuPanelABLayout);
        menuPanelABLayout.setHorizontalGroup(
            menuPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JBCrearBugsAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JBMostrarTablaAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2AB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelABLayout.createSequentialGroup()
                .addGroup(menuPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelABLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1AB))
                    .addGroup(menuPanelABLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1AB, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                    .addGroup(menuPanelABLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5AB)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(JBExportarPDFAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JBComentariosAB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JBSignOutAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuPanelABLayout.setVerticalGroup(
            menuPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelABLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2AB, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1AB, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(JBCrearBugsAB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBMostrarTablaAB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(JBComentariosAB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBExportarPDFAB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBSignOutAB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5AB, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1AB)
                .addContainerGap())
        );

        javax.swing.GroupLayout jMainPanelABLayout = new javax.swing.GroupLayout(jMainPanelAB);
        jMainPanelAB.setLayout(jMainPanelABLayout);
        jMainPanelABLayout.setHorizontalGroup(
            jMainPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelABLayout.createSequentialGroup()
                .addComponent(menuPanelAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMainPanelAB1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jMainPanelABLayout.setVerticalGroup(
            jMainPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainPanelABLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jMainPanelABLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jMainPanelABLayout.createSequentialGroup()
                        .addComponent(jMainPanelAB1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(menuPanelAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        MainPanel.add(jMainPanelAB, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1180, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MainPanel.getAccessibleContext().setAccessibleName("MainPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsuarioTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuarioTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuarioTextFieldActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked

        try {
            if (signInDesarrollador()&&rolsito == false && rolsito2 == false) {
                BoxAbiertos.setSelected(true);
                BoxFinalizados.setSelected(true);
                updateTablas();
                //UpdateComboBox();
                CardLayout card = (CardLayout) MainPanel.getLayout();
                card.show(MainPanel, "MenuPanel");

                //developerIDLabel.setText(UsuarioTextField.getText());
                //DeveloperID = UsuarioTextField.getText();
                String usu = UsuarioTextField.getText();
                UsuarioTextField.setText("");
                PasswordTextField.setText("");
                HR = new HiloRefresh(ProyectosTable, ProyectosTable2, BugsTable, url, username, password, DeveloperID, BoxAbiertos, BoxFinalizados, BoxAbiertos2, BoxFinalizados2, ProyectosComboBox, ComentariosTextArea, usu, true);
                Thread proceso1 = new Thread(HR);
                proceso1.start();
            }else if(signInDesarrollador() && rolsito == true){
                
                CardLayout card = (CardLayout) MainPanel.getLayout();
                card.show(MainPanel, "AdminPanel");
                String usu = UsuarioTextField.getText();
                UsuarioTextField.setText("");
                PasswordTextField.setText("");
                HR2 = new HiloRefresh(ProyectosTable, ProyectosTable2, BugsTable, url, username, password, DeveloperID, BoxAbiertos, BoxFinalizados, BoxAbiertos2, BoxFinalizados2, ProyectosComboBox, ComentariosTextArea, usu, false);
                Thread proceso2 = new Thread(HR2);
                proceso2.start();
            }
            else if (signInDesarrollador() && rolsito2 == true) {
                currentuser2 = UsuarioTextField.getText();
                CardLayout card = (CardLayout) MainPanel.getLayout();
                card.show(MainPanel, "card5");
                String usu = UsuarioTextField.getText();
                UsuarioTextField.setText("");
                PasswordTextField.setText("");
                HR2 = new HiloRefresh(ProyectosTable, ProyectosTable2, BugsTable, url, username, password, DeveloperID, BoxAbiertos, BoxFinalizados, BoxAbiertos2, BoxFinalizados2, ProyectosComboBox, ComentariosTextArea, usu, false);
                Thread proceso2 = new Thread(HR2);
                proceso2.start();
            }
            else {
                JOptionPane.showMessageDialog(null, "El username o password es incorrecto.");
            }
            
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "SignInPanel");
        HR.setAlive(false);
        HR = null;
        developerIDLabel.setText("");
        UsuarioTextField.setText("");
        //calendario.clear();
        MesLabel.setText("Mes");
        Color colorOFF = new Color(60, 63, 65);
        for (int j = 0; j < calendario.size(); j++) {
            calendario.get(j).setBackground(colorOFF);
            calendario.get(j).setText("");
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        if (BugsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Porfavor seleccione un bug que Finalizar.");
        } else {
            try {
                String codigo = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 0);
                //System.out.println(codigo);
                String proyecto = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 2);
                String estado = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 4);
                String inicio = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 5);

                if (estado.equalsIgnoreCase("Finalizado")) {
                    JOptionPane.showMessageDialog(null, "Este bug ya ha sido Finalizado anteriormente.");
                } else if (inicio == null) {
                    JOptionPane.showMessageDialog(null, "Este bug aun no ha sido iniciado, por lo que no se puede Finalizar.");
                } else {
                    Connection connection = DriverManager.getConnection(url, username, password);
                    System.out.println("Connected to SQL Server.");
                    Statement statement = connection.createStatement();
                    String sql = "update Bug set Fecha_Final=getDate() where Codigo_Bug=" + codigo;
                    int rows = statement.executeUpdate(sql);
                    sql = "update Bug set Estado='Finalizado' where Codigo_Bug=" + codigo;
                    statement.executeUpdate(sql);

                    /*System.out.println("1");
                    sql = "insert into Bug_Finalizado values(" +DeveloperID + "," + proyecto +"," + codigo + ")";
                    System.out.println(sql);
                    statement.executeUpdate(sql);
                    System.out.println("2");*/
 /*if (rows > 0) {
                        System.out.println("Se inserto exitosamente.");
                    }*/
                    updateTablas();
                    connection.close();
                }

            } catch (SQLException ex) {
                System.out.println("Fallo en Finalizar");
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        if (BugsTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Porfavor seleccione un bug que iniciar.");
        } else if (DateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Porfavor seleccione una fecha apropiada en el DateChooser.");
        } else {
            try {
                String codigo = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 0);
                //(codigo);
                String estado = (String) BugsTable.getValueAt(BugsTable.getSelectedRow(), 4);

                if (estado.equalsIgnoreCase("Finalizado")) {
                    JOptionPane.showMessageDialog(null, "Este bug ya ha sido Finalizado anteriormente.");
                } else {
                    //DateChooser.setDateFormatString("yyyy-mm-dd");
                    Connection connection = DriverManager.getConnection(url, username, password);
                    System.out.println("Connected to SQL Server.");
                    Statement statement = connection.createStatement();
                    Date fecha = DateChooser.getDate();
                    //String fechaAdd = fecha.getYear() + "-" + fecha.getMonth()+ "-" + fecha.getDate();
                    String fechaAdd2 = ((JTextField) DateChooser.getDateEditor().getUiComponent()).getText();
                    //(fechaAdd2);

                    String sql = "update Bug set Fecha_Inicio=CAST('" + fechaAdd2 + "' AS DATETIME) where Codigo_Bug=" + codigo;
                    int rows = statement.executeUpdate(sql);
                    if (rows > 0) {
                        System.out.println("Se inserto exitosamente.");
                    }
                    updateTablas();
                    connection.close();
                }

            } catch (SQLException ex) {
                System.out.println("Fallo en agregar Date");
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        updateTablas();
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void BoxAbiertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxAbiertosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxAbiertosActionPerformed

    private void BoxFinalizadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxFinalizadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxFinalizadosActionPerformed

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        if (ProyectosTable2.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Porfavor seleccione un proyecto que filtrar.");
        } else {
            try {
                String Filtro = (ProyectosTable2.getModel().getValueAt(ProyectosTable2.getSelectedRow(), 0)).toString();
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String model3 = "";
                String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                        + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                        + "where B.Codigo_Desarrollador = "
                        + DeveloperID + " and B.Codigo_Proyecto = " + Filtro + " order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
                rs3 = statement.executeQuery(sql3);

                String currentProject = "";
                String currentBug = "";
                boolean contador = false;
                while (rs3.next()) {
                    String Codigo_Bug = rs3.getString("Codigo_Bug");
                    String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                    String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                    String Comentario = rs3.getString("Comentario");
                    String Username = rs3.getString("Username");
                    String Rol = (rs3.getString("Rol")).substring(0, 3);
                    String date = rs3.getString("Datetime");
                    if (currentProject.equals(Codigo_Proyecto) == false) {
                        if (contador) {
                            model3 += "\n";
                        }
                        model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                        currentProject = Codigo_Proyecto;
                    }
                    contador = true;
                    if (currentBug.equals(Codigo_Bug) == false) {
                        model3 += "    BUG: " + Codigo_Bug + "\n";
                        currentBug = Codigo_Bug;
                    }
                    model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
                }
                ComentariosTextArea.setText(model3);
                System.out.println("Comentarios: " + model3);
                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        if (ProyectosComboBox.getComponentCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay Bugs a los que agregar comentario.");
        } else {
            try {
                String[] splited = ProyectosComboBox.getSelectedItem().toString().split("\\s+");
                System.out.println(splited[1]);
                String bugNum = splited[1];
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String sql3 = "select Username \n"
                        + "from Desarrollador \n"
                        + "where Codigo_Desarrollador = "
                        + DeveloperID;
                rs3 = statement.executeQuery(sql3);
                String User2 = "";
                while (rs3.next()) {
                    User2 = rs3.getString("Username");
                }
                String sql = "insert into Comentario values('" + User2 + "'," + bugNum + ",'" + ComentarioTextArea.getText() + "',getDate())";
                statement.executeUpdate(sql);
                ComentarioTextArea.setText("");
                updateTablas();
                //System.out.println(User2);

                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        updateTablas();
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        try {
            //String Filtro = (ProyectosTable2.getModel().getValueAt(ProyectosTable2.getSelectedRow(), 0)).toString();
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                    + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                    + "where B.Codigo_Desarrollador = "
                    + DeveloperID + " order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
            rs3 = statement.executeQuery(sql3);

            String currentProject = "";
            String currentBug = "";
            boolean contador = false;
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                String Comentario = rs3.getString("Comentario");
                String Username = rs3.getString("Username");
                String Rol = (rs3.getString("Rol")).substring(0, 3);
                String date = rs3.getString("Datetime");
                if (currentProject.equals(Codigo_Proyecto) == false) {
                    if (contador) {
                        model3 += "\n";
                    }
                    model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                    currentProject = Codigo_Proyecto;
                }
                contador = true;
                if (currentBug.equals(Codigo_Bug) == false) {
                    model3 += "    BUG: " + Codigo_Bug + "\n";
                    currentBug = Codigo_Bug;
                }
                model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
            }
            ComentariosTextArea.setText(model3);
            System.out.println("Comentarios: " + model3);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void ProyectosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProyectosComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProyectosComboBoxActionPerformed

    private void BoxAbiertos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxAbiertos2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxAbiertos2ActionPerformed

    private void BoxFinalizados2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoxFinalizados2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoxFinalizados2ActionPerformed

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        String Result = "";
        int year = (YearChooser.getYear());
        int month = (MonthChooser.getMonth()) + 1;
        System.out.println(month);
        System.out.println(year);
        String date_string = "1-" + month + "-" + year;
        //Instantiating the SimpleDateFormat class
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        //Parsing the given String to Date object
        Date date;
        int diaStart = 0;
        try {
            date = formatter.parse(date_string);
            System.out.println("Date value: " + date);
            System.out.println("PRIMER DIA: " + date.getDay());
            diaStart = date.getDay();
        } catch (ParseException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
        int dias = 0;
        String nombreMes = "";
        switch (month) {
            case 1: {
                dias = 31;
                nombreMes = "E N E R O";
            }
            break;
            case 2: {
                if (year % 4 == 0) {
                    dias = 29;
                } else {
                    dias = 28;
                }
                nombreMes = "F E B R E R O";
            }
            break;
            case 3: {
                dias = 31;
                nombreMes = "M A R Z O ";
            }
            break;
            case 4: {
                dias = 30;
                nombreMes = "A B R I L ";
            }
            break;
            case 5: {
                dias = 31;
                nombreMes = "M A Y O";
            }
            break;
            case 6: {
                dias = 30;
                nombreMes = "J U N I O";
            }
            break;
            case 7: {
                dias = 31;
                nombreMes = "J U L I O ";
            }
            break;
            case 8: {
                dias = 31;
                nombreMes = "A G O S T O";
            }
            break;
            case 9: {
                dias = 30;
                nombreMes = "S E P T I E M B R E";
            }
            break;
            case 10: {
                dias = 31;
                nombreMes = "O C T U B R E";
            }
            break;
            case 11: {
                dias = 30;
                nombreMes = "N O V I E M B R E ";
            }
            break;
            case 12: {
                dias = 31;
                nombreMes = "D I C I E M B R E";
            }
            break;
        }
        /*Result += nombreMes + "\n";
        for(int i = 1; i <= 120; i++){
            Result += " ";
        }
        Result += "\n";
        //Result += "                      D O M I N G O ";
        Result += "|";
        for(int i = 1; i <= 2400; i++){
            if(i%30==0){
                Result += "|";
            }else{
                Result += "-";
            }
            CalendarioTextPane.setText(Result);
        }*/
        Color colorON = new Color(234, 234, 234);
        Color colorOFF = new Color(60, 63, 65);
        for (int j = 0; j < calendario.size(); j++) {
            calendario.get(j).setBackground(colorOFF);
            calendario.get(j).setText("");

        }
        MesLabel.setText(nombreMes);
        /* String[][] matrix = new String[2][31];
        for(int x = 0; x < 2; x++){
            for(int y = 0; y < 31; y++){
                matrix[x][y] = null;
            }
        }*/
        for (int i = 0; i < dias; i++) {
            calendario.get(i + diaStart).setBackground(colorON);
            String texo = " " + (i + 1) + ")\n";

            calendario.get(i + diaStart).setText(texo);
        }
        try {
            //String Filtro = (ProyectosTable2.getModel().getValueAt(ProyectosTable2.getSelectedRow(), 0)).toString();
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Bug, day(B.Fecha_Inicio) as Day \n"
                    + "from Bug B \n"
                    + "where B.Codigo_Desarrollador= " + DeveloperID
                    + " and (year(B.Fecha_Inicio)=" + year + " and month(B.Fecha_Inicio)= " + month + ") order by day(B.Fecha_Inicio)";
            rs3 = statement.executeQuery(sql3);
            int same = 0;
            String textoo = "";
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                int dia = Integer.parseInt(rs3.getString("Day"));
                if (same != dia) {
                    same = dia;
                    textoo = " " + dia + ")\n" + " Se incio el Bug: " + Codigo_Bug + "\n";
                    calendario.get(dia + diaStart - 1).setText(textoo);
                } else {
                    textoo += " Se incio el Bug: " + Codigo_Bug + "\n";
                    calendario.get(dia + diaStart - 1).setText(textoo);
                }

            }
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Calendario");
        }


    }//GEN-LAST:event_jButton14MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void prograJTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prograJTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prograJTActionPerformed

    private void prograButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prograButActionPerformed
        String leng = prograJT.getText();
        prograJT.setText("");
        //lenguajes.add(leng);
        lenguajes += leng + ", ";
    }//GEN-LAST:event_prograButActionPerformed

    private void techButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techButActionPerformed
        String techs = techsJT.getText();
        techsJT.setText("");
        //  tecnos.add(techs);
        tecnos += techs + ", ";
    }//GEN-LAST:event_techButActionPerformed

    private void finalAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalAddActionPerformed
        // String dev = "insert into Desarrolladores(Codigo_Desarrollador,Nombre,LenguajesProgramacion,Tecnologias_Dominadas)"
        //         + "VALUES(?,?,?,?)";
        String idd = "";
        idd = (idJT.getText());
        int id = Integer.parseInt(idd);
        String name = nameJT.getText();
        idJT.setText("");
        nameJT.setText("");
        String nLengs = "";
        String nTechs = "";
        for (int i = 0; i < lenguajes.length() - 2; i++) {
            nLengs += lenguajes.charAt(i);
        }
        for (int i = 0; i < tecnos.length() - 2; i++) {
            nTechs += tecnos.charAt(i);
        }
        insertar(id, name, nLengs, nTechs);
    }//GEN-LAST:event_finalAddActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        lenguajes = "";
        tecnos = "";
        this.setVisible(true);
        // this.setModal(true);
        this.pack();
        this.setLocationRelativeTo(this);
        addDev.setVisible(false);
        this.setLocationRelativeTo(null);
        addDev.setModal(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    private static byte[] hash;

    public static byte[] getHash(String passie) throws NoSuchAlgorithmException {
        MessageDigest mD = MessageDigest.getInstance("SHA-256");
        return hash = mD.digest(passie.getBytes(StandardCharsets.UTF_8));

    }

    public static String byteToHex(String pass) throws NoSuchAlgorithmException {
        return byteToHex(getHash(pass));
    }
    public void updateComentarios3000(){
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                    + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                    + "\n order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
            rs3 = statement.executeQuery(sql3);

            String currentProject = "";
            String currentBug = "";
            boolean contador = false;
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                String Comentario = rs3.getString("Comentario");
                String Username = rs3.getString("Username");
                String Rol = (rs3.getString("Rol")).substring(0, 3);
                String date = rs3.getString("Datetime");
                if (currentProject.equals(Codigo_Proyecto) == false) {
                    if (contador) {
                        model3 += "\n";
                    }
                    model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                    currentProject = Codigo_Proyecto;
                }
                contador = true;
                if (currentBug.equals(Codigo_Bug) == false) {
                    model3 += "    BUG: " + Codigo_Bug + "\n";
                    currentBug = Codigo_Bug;
                }
                model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
            }
            jTextArea2AB.setText(model3);
            System.out.println("Comentarios: " + model3);

            ResultSet rs4;
            String sql4 = "select B.Codigo_Bug, B.Codigo_Proyecto \n"
                    + "from Bug B \n"
                    + "where (B.Estado!='Finalizado' or B.Estado!='finalizado')";
            String currentBugu = "";
            rs4 = statement.executeQuery(sql4);
            jComboBox4AB.setModel(new DefaultComboBoxModel<>());
            while (rs4.next()) {
                System.out.println("entro");
                String Codigo_Bug = rs4.getString("Codigo_Bug");
                String Codigo_Proyecto = rs4.getString("Codigo_Proyecto");
                if (currentBugu.equals(Codigo_Bug) == false) {
                    jComboBox4AB.addItem("BUG: " + Codigo_Bug + " - " + "PROYECTO: " + Codigo_Proyecto);
                    currentBugu = Codigo_Bug;
                }
            }

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) ProyectosTable3.getModel();
            modelo.setRowCount(0);
            String sql = "select distinct  B.Codigo_Proyecto, PS.Nombre \n"
                    + "from Bug B inner join Proyecto_Software PS on PS.Codigo_Proyecto=B.Codigo_Proyecto";
            rs = statement.executeQuery(sql);

            while (rs.next()) {
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
            }
            ProyectosTable3.setModel(modelo);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }
    public void updateComentarios() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                    + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                    + "\n order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
            rs3 = statement.executeQuery(sql3);

            String currentProject = "";
            String currentBug = "";
            boolean contador = false;
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                String Comentario = rs3.getString("Comentario");
                String Username = rs3.getString("Username");
                String Rol = (rs3.getString("Rol")).substring(0, 3);
                String date = rs3.getString("Datetime");
                if (currentProject.equals(Codigo_Proyecto) == false) {
                    if (contador) {
                        model3 += "\n";
                    }
                    model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                    currentProject = Codigo_Proyecto;
                }
                contador = true;
                if (currentBug.equals(Codigo_Bug) == false) {
                    model3 += "    BUG: " + Codigo_Bug + "\n";
                    currentBug = Codigo_Bug;
                }
                model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
            }
            jTextArea2AB.setText(model3);
            System.out.println("Comentarios: " + model3);

            ResultSet rs4;
            String sql4 = "select B.Codigo_Bug, B.Codigo_Proyecto \n"
                    + "from Bug B \n"
                    + "where (B.Estado!='Finalizado' or B.Estado!='finalizado')";
            String currentBugu = "";
            rs4 = statement.executeQuery(sql4);
            jComboBox4AB.setModel(new DefaultComboBoxModel<>());
            while (rs4.next()) {
                System.out.println("entro");
                String Codigo_Bug = rs4.getString("Codigo_Bug");
                String Codigo_Proyecto = rs4.getString("Codigo_Proyecto");
                if (currentBugu.equals(Codigo_Bug) == false) {
                    jComboBox4AB.addItem("BUG: " + Codigo_Bug + " - " + "PROYECTO: " + Codigo_Proyecto);
                    currentBugu = Codigo_Bug;
                }
            }

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) ProyectosTable2.getModel();
            modelo.setRowCount(0);
            String sql = "select distinct  B.Codigo_Proyecto, PS.Nombre \n"
                    + "from Bug B inner join Proyecto_Software PS on PS.Codigo_Proyecto=B.Codigo_Proyecto";
            rs = statement.executeQuery(sql);

            while (rs.next()) {
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
            }
            ProyectosTable2.setModel(modelo);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    public static String byteToHex(byte[] hash) {

        StringBuffer hexString = new StringBuffer();
        for (int i = 0; i < hash.length; i++) {
            String hex = Integer.toHexString(255 & hash[i]);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        // System.out.println(hexString);
        return hexString.toString();
    }

    public static void insertar(int id, String name, String progras, String techs) {
        Connection conn = null;
        Statement stmt = null;

        String dev = "";
        try {

//            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(url, username, password);
            stmt = conn.createStatement();
            //  for (int i = 0; i < progras.size(); i++) {
            // String lengs = progras.get(i);
            // String techn = techs.get(i);
            dev = "insert into Desarrollador "
                    + "VALUES(" + id + ",'" + name + "','" + progras + "','" + techs + "',null)";
            //   dev = "insert into Desarrollador "
            //    + "VALUES(777,'Eduardo','c++','mansour++')";

            //    }
            stmt.executeUpdate(dev);

        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {

            }
            try {
                if (conn != null) {
                    conn.close();
                }

            } catch (SQLException se) {
                se.printStackTrace();
            }
        }

    }
    private void finalAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalAdd1ActionPerformed
        Connection conn = null;
        Statement stmt = null;

        String dev = "";
        try {
            conn = DriverManager.getConnection(url, username, password);
            stmt = conn.createStatement();
            int row = DevsTable.getSelectedRow();
            String name = nameJT1.getText();
            String nLengs = "";
            String nTechs = "";
            for (int i = 0; i < lenguajes.length() - 2; i++) {
                nLengs += lenguajes.charAt(i);
            }
            for (int i = 0; i < tecnos.length() - 2; i++) {
                nTechs += tecnos.charAt(i);
            }
            String value = (DevsTable.getModel().getValueAt(row, 0).toString());
            String query = "UPDATE Desarrollador set Nombre='" + name + "', Lenguajes_Programacion='" + nLengs
                    + "', Tecnologias_Dominadas='" + nTechs + "'\n"
                    + "where Codigo_Desarrollador=" + value;
            stmt.executeUpdate(query);
            JOptionPane.showMessageDialog(null, "Update Succesfull");
            conn.close();
        } catch (SQLException se) {

        }
    }//GEN-LAST:event_finalAdd1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        lenguajes = "";
        tecnos = "";
        this.setVisible(true);
        // this.setModal(true);
        //this.pack();
        //this.setLocationRelativeTo(this);
        modifDev.setVisible(false);
        modifDev.setModal(false);
        // this.setLocationRelativeTo(null);
        idJT1.setText("");
        nameJT1.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void techBut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techBut1ActionPerformed
        tecnos += ", " + techsJT1.getText() + ", ";
        techsJT1.setText("");
    }//GEN-LAST:event_techBut1ActionPerformed

    private void prograBut1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prograBut1ActionPerformed
        lenguajes += ", " + prograJT1.getText() + ", ";
        prograJT1.setText("");
    }//GEN-LAST:event_prograBut1ActionPerformed

    private void prograJT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prograJT1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prograJT1ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        proyCode.setText("");
        proyName.setText("");
        crearProyecs.setVisible(true);
        crearProyecs.setModal(true);
        crearProyecs.pack();
        crearProyecs.setLocationRelativeTo(null);
        this.setVisible(false);

        llenarCombo();

    }//GEN-LAST:event_jButton15ActionPerformed

    public void llenarCombo() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs2;
            String sql2 = "select Codigo_Equipo from [Desarrolladores en Proyecto]\n "
                    + "group by Codigo_Equipo";
            rs2 = statement.executeQuery(sql2);
            while (rs2.next()) {
                String Codigo_Proyecto = rs2.getString("Codigo_Equipo");
                System.out.println(Codigo_Proyecto);
                comboDevs.addItem(Codigo_Proyecto);
            }
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al llenar ComboBox");
        }
    }

    public void llenarCombo2() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs2;
            String sql2 = "select Codigo_Equipo from [Desarrolladores en Proyecto]\n "
                    + "group by Codigo_Equipo";
            rs2 = statement.executeQuery(sql2);
            while (rs2.next()) {
                String Codigo_Proyecto = rs2.getString("Codigo_Equipo");
                System.out.println(Codigo_Proyecto);
//                bugsCombo.addItem(Codigo_Proyecto);
            }
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al llenar ComboBox");
        }
    }


    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // AQUIIIIIIIIIii
        updateTabla4();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        int row = proyecsTable.getSelectedRow();
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement stmt = connection.createStatement();

            ResultSet rs;
            String value = proyecsTable.getModel().getValueAt(row, 0).toString();
            // System.out.println(value);
            String sql = "DELETE FROM Proyecto_Software where Codigo_Proyecto = " + value;
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.executeUpdate();
            connection.close();
            JOptionPane.showMessageDialog(null, "Eliminado Exitoso");

        } catch (SQLException se) {

        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        if (proyecsTable.getSelectedColumn() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un desarrollador.");
        } else {
            modif = true;
            crearProyecs.setVisible(true);
            crearProyecs.setModal(true);
            crearProyecs.pack();
            crearProyecs.setLocationRelativeTo(null);
            this.setVisible(false);

            llenarCombo();

            int row = proyecsTable.getSelectedRow();
            System.out.println(row);
            System.out.println(proyecsTable.getModel().getValueAt(row, 0).toString());
            System.out.println(proyecsTable.getModel().getValueAt(row, 1).toString());
            proyCode.setText(proyecsTable.getModel().getValueAt(row, 0).toString());
            // idJT1.setText("hi");
            proyName.setText(proyecsTable.getModel().getValueAt(row, 1).toString());

            //  SimpleDateFormat formatter5=new SimpleDateFormat("E, MMM dd yyyy");
            //  java.util.Date utilDate1 = new java.util.Date(date2);
            // Date date = formatter4.parse(utilDate);
            //  Chooser1.setDate(utilDate1);
        }

    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        this.setVisible(true);
        // this.setModal(true);
        this.pack();
        this.setLocationRelativeTo(this);
        proyecsP.setVisible(false);
        this.setLocationRelativeTo(null);
        proyecsP.setModal(false);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog("Ingrese ID de equipo"));
        System.out.println(id);
        int row = devsTable2.getSelectedRow();
        Connection conn = null;
        Statement stmt = null;
        int row1 = devsTable2.getSelectedRow();
        int row2 = teamsTable.getSelectedRow();
        try {
            conn = DriverManager.getConnection(url, username, password);
            stmt = conn.createStatement();
            String value = devsTable2.getModel().getValueAt(row, 0).toString();
            String sql = "insert into [Desarrolladores en Proyecto] "
                    + "VALUES (" + value + ",  null  , '" + id + "')";
            stmt.executeUpdate(sql);

            String value2 = devsTable2.getModel().getValueAt(row1, 0).toString();

            String sq2 = "update Desarrollador set Equipo =" + id + "\n"
                    + "where Codigo_Desarrollador =" + value2;
            stmt.executeUpdate(sq2);
            JOptionPane.showMessageDialog(null, "Desarrollador Aregado a Equipo!");
            JOptionPane.showMessageDialog(null, "Equipo Creado!");
            conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        updateTabla2();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        int row = teamsTable.getSelectedRow();
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement stmt = connection.createStatement();

            ResultSet rs;
            String value = teamsTable.getModel().getValueAt(row, 0).toString();
            // System.out.println(value);
            String sql = "DELETE FROM Desarolladores en Proyecto where Codigo_Equipo = " + value;
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.executeUpdate();
            connection.close();
            JOptionPane.showMessageDialog(null, "Eliminado Exitoso");

        } catch (SQLException se) {

        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        this.setVisible(true);
        // this.setModal(true);
        this.pack();
        this.setLocationRelativeTo(this);
        Devs.setVisible(false);
        this.setLocationRelativeTo(null);
        Devs.setModal(false);
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        updateTabla3();
    }//GEN-LAST:event_jButton24ActionPerformed

    public void updateTabla3() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) teamsTable.getModel();
            modelo.setRowCount(0);
            //  System.out.println("hi1");
            String sql = "select Codigo_Equipo, Codigo_Desarrollador, Codigo_Proyecto \n"
                    + "from [Desarrolladores en Proyecto] \n";
            // System.out.println("hi2");
            rs = statement.executeQuery(sql);
            //  System.out.println("hi3");
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                //  System.out.println("4");
                String codigo = rs.getString("Codigo_Equipo");
                // System.out.println("5");
                String nombre = rs.getString("Codigo_Desarrollador");
                //  System.out.println("6");
                String programs = rs.getString("Codigo_Proyecto");
                //   System.out.println("7");
                Object[] newrow = {codigo, nombre, programs};
                modelo.addRow(newrow);
            }
            teamsTable.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        int row1 = devsTable2.getSelectedRow();
        int row2 = teamsTable.getSelectedRow();
        Connection conn = null;
        Statement stmt = null;

        try {
            conn = DriverManager.getConnection(url, username, password);
            stmt = conn.createStatement();
            String value = devsTable2.getModel().getValueAt(row1, 0).toString();
            String value2 = teamsTable.getModel().getValueAt(row2, 0).toString();
            String sql = "update Desarrollador set Equipo =" + value2 + "\n"
                    + "where Codigo_Desarrollador =" + value;
            System.out.println(value);
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Desarrollador Agregado a Equipo!");
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        Connection conn = null;
        Statement stmt = null;

        String dev = "";
        if (modif == false) {
            try {

                //            Class.forName("com.mysql.jdbc.Driver");
                System.out.println("addd");
                conn = DriverManager.getConnection(url, username, password);
                stmt = conn.createStatement();
                int id = Integer.parseInt(proyCode.getText());
                String name = proyName.getText();
                String fechaAdd2 = ((JTextField) Chooser.getDateEditor().getUiComponent()).getText();
                String fechaAdd1 = ((JTextField) Chooser1.getDateEditor().getUiComponent()).getText();
                // System.out.println(fechaAdd2);
                int team = Integer.parseInt(comboDevs.getSelectedItem().toString());
                //  for (int i = 0; i < progras.size(); i++) {
                // String lengs = progras.get(i);
                // String techn = techs.get(i);
                String devs = "";

                dev = "insert into Proyecto_Software "
                        + "VALUES(" + id + ",'" + name + "', CAST('" + fechaAdd2 + "' as DATETIME), " + " CAST('" + fechaAdd1 + "' as DATETIME), '" + team + "', null , null " + ")";
                //   dev = "insert into Desarrollador "
                //    + "VALUES(777,'Eduardo','c++','mansour++')";

                //    }
                stmt.executeUpdate(dev);
                devs = "UPDATE [Desarrolladores en Proyecto] set Codigo_Proyecto =' " + id + "'\n"
                        + "where Codigo_Equipo='" + team + "'";
                stmt.executeUpdate(devs);
                comboDevs.removeAllItems();

            } catch (SQLException se) {
                se.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (stmt != null) {
                        conn.close();
                    }
                } catch (SQLException se) {

                }
                try {
                    if (conn != null) {
                        conn.close();
                    }

                } catch (SQLException se) {
                    se.printStackTrace();
                }
            }
        } else {

            try {
                System.out.println("heree");
                conn = DriverManager.getConnection(url, username, password);
                stmt = conn.createStatement();
                int row = proyecsTable.getSelectedRow();
                //int id = Integer.parseInt(proyCode.getText());
                String name = proyName.getText();
                String fechaAdd2 = ((JTextField) Chooser.getDateEditor().getUiComponent()).getText();
                String fechaAdd1 = ((JTextField) Chooser1.getDateEditor().getUiComponent()).getText();
                String value = (proyecsTable.getModel().getValueAt(row, 0).toString());
                int team = Integer.parseInt(comboDevs.getSelectedItem().toString());
                System.out.println("here2");
                String query = "UPDATE Proyecto_Software set  Nombre='" + name
                        + "', Fecha_Inicio=CAST('" + fechaAdd2 + "' as DATETIME), Fecha_Final=CAST('" + fechaAdd1 + "' as DATETIME), Equipo_Desarrolladores='" + team
                        + "',ListaBugs= null , ListaBugsFin = null\n"
                        + "where Codigo_Proyecto=" + value;
                /* String query = "UPDATE Proyecto_Software set Codigo_Proyecto='" + id + "', Nombre='" + name
                + "', Fecha_Inicio='" + fechaAdd2 + "' , Fecha_Final='"+fechaAdd1+"' , EquipoDesarrolladores='"+team+
                "',ListaBugs= null , ListaBugsFin = null)\n "
                + "where Codigo_Proyecto=" + value;*/
                System.out.println(value);
                //System.out.println(id);
                stmt.executeUpdate(query);
                System.out.println("here3");
                JOptionPane.showMessageDialog(null, "Update Succesfull");
                comboDevs.removeAllItems();
                modif = false;
                conn.close();
            } catch (SQLException se) {

            }
        }
        crearProyecs.setVisible(false);
        
        
        
        crearProyecs.setModal(false);

        comboDevs.removeAllItems();
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        this.setVisible(true);
        // this.setModal(true);
        this.pack();
        //this.setLocationRelativeTo(this);
        bugss.setVisible(false);
        this.setLocationRelativeTo(null);
        bugss.setModal(false);
        //   bugsCombo.removeAllItems();
    }//GEN-LAST:event_jButton27ActionPerformed

    public static void mandarCorreo(String receptor,String desc) {
        // El correo gmail de envÃ­o
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.ssl.trust", "smtp.gmail.com");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");

        Session sesion = Session.getDefaultInstance(props);
        String correoEnvia = "eaguilaortiz0403@gmail.com";
        String contrasena = "fehkoxwfhvypflok";
       // String receptor = "josueespinalsanz@gmail.com";
        String asunto = "Asginacion Bug";
        String mensaje = "El administrador considera que sus habilidades son lo suficentemente buenas y se le ha asigando el bug con codigo"
                + ": "+buggie+", con el siguiente error: "+desc+".\nEspero pueda manejar este error en el menor tiempo posible y de manera correcta!";
        try {
            MimeMessage mail = new MimeMessage(sesion);

            mail.setFrom(new InternetAddress(correoEnvia));
            mail.addRecipient(Message.RecipientType.TO, new InternetAddress(receptor));
            mail.setSubject(asunto);
            mail.setText(mensaje);

            Transport transporte = sesion.getTransport("smtp");
            transporte.connect(correoEnvia, contrasena);

            transporte.sendMessage(mail, mail.getRecipients(Message.RecipientType.TO));
            transporte.close();
            JOptionPane.showMessageDialog(null, "Listo! Revise el correo");
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }
    public static String buggie = "";

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed

        Connection conn = null;
        Statement stmt = null;

        try {
           // System.out.println("heree");
            Connection connection = DriverManager.getConnection(url, username, password);
            String bug = "";
            conn = DriverManager.getConnection(url, username, password);
            Statement statement = connection.createStatement();
            stmt = conn.createStatement();
            int row = bugsTable.getSelectedRow();
            //            String value = bugsCombo.getSelectedItem().toString();
            //int id = Integer.parseInt(proyCode.getText());

            bugs += bugsTable.getModel().getValueAt(row, 0).toString() + ", ";
            bug = bugsTable.getModel().getValueAt(row, 0).toString();
            System.out.println(bugs);
            int row2 = devieTable.getSelectedRow();
            String id_dev = devieTable.getModel().getValueAt(row2, 0).toString();
            System.out.println(id_dev);
            //  String value2 =
            ResultSet rs;
            ResultSet rs2;
            System.out.println("here2");
            buggie = bug;
            String query = "UPDATE Bug set  Codigo_Desarrollador='" + id_dev + "',Estado = 'Asignado' \n"
                    + "where Codigo_Bug = " + bug;
            String query2 = "select D.Username from Desarrollador D"
                    + " where D.Codigo_Desarrollador='"+id_dev+"'";
            String query3 = "select Descripcion from Bug where Codigo_Bug="+bug;
            
            
            
            rs = statement.executeQuery(query2);
            String user ="";
            String desc = "";
            while(rs.next()){
                user = rs.getString("Username");
            }
            rs2 = statement.executeQuery(query3);
            
            while (rs2.next()){
                desc = rs2.getString("Descripcion");
            }
            
            mandarCorreo(user,desc);
            
            
            stmt.executeUpdate(query);
            System.out.println("gg");
            String up = "";
            //   up= "UPDATE Bug set Codigo_Proyecto = '"+ +"'"
            // System.out.println("here3");
            JOptionPane.showMessageDialog(null, "Asignacion Exitosa");
            comboDevs.removeAllItems();
            modif = false;
            conn.close();
        } catch (SQLException se) {
            //   System.out.println("cagaste");
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    public void updateTabla3000() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();
            int row = bugsTable.getSelectedRow();
            int code = Integer.parseInt(bugsTable.getModel().getValueAt(row, 0).toString());
            System.out.println(code);
            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) devieTable.getModel();
            modelo.setRowCount(0);
            String sql = "with codigo (code) as\n"
                    + "(select PS.Equipo_Desarrolladores from Bug B inner join Proyecto_Software PS on B.Codigo_Proyecto=PS.Codigo_Proyecto\n"
                    + "where B.Codigo_Bug=" + code + ")\n"
                    + "select Codigo_Desarrollador,Username from Desarrollador\n"
                    + "where Equipo = (select * from Codigo)";
            rs = statement.executeQuery(sql);
            while (rs.next()) {
                String codigo = rs.getString("Codigo_Desarrollador");
                String nombre = rs.getString("Username");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
            }
            devieTable.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }


    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        updateTabla3000();
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        Connection conn = null;
        Statement stmt = null;

        String dev = "";
        try {
            if (modifU == false) {
                String user = userNTF.getText() + "@gmail.com";
                user = user.toLowerCase();
                String passie = passNTF.getText();
                String hashed = byteToHex(passie);
                String nombreC = nameNTF.getText();
                String rol = rolsCombo.getSelectedItem().toString();

                conn = DriverManager.getConnection(url, username, password);
                stmt = conn.createStatement();
                //   System.out.println(hashed);
                dev = "insert into Users "
                        + "VALUES('" + user + "','" + hashed + "','" + nombreC + "','" + rol + "')";

                stmt.executeUpdate(dev);
                if (rol.equals("Desarrollador")) {

                    int id = Integer.parseInt(JOptionPane.showInputDialog("Ingrese ID de Desarrollador"));
                    String lenguajes = (JOptionPane.showInputDialog("Ingrese Lenguajes de Programacion que domina"));
                    String tecnos = (JOptionPane.showInputDialog("Ingrese Teconologias que domina"));
                    dev = "insert into Desarrollador values ('" + id + "','" + user + "','" + lenguajes + "','" + tecnos + "',null)";
                    stmt.executeUpdate(dev);
                }

                JOptionPane.showMessageDialog(null, "Usuario creado exitosamente!");
                userNTF.setText("");
                passNTF.setText("");
                nameNTF.setText("");
            } else {

                String user = userNTF.getText();

                user = user.toLowerCase();
                String passie = passNTF.getText();
                passie = byteToHex(passie);
                String nombreC = nameNTF.getText();
                String rol = rolsCombo.getSelectedItem().toString();

                conn = DriverManager.getConnection(url, username, password);
                stmt = conn.createStatement();
                System.out.println(passie);
                System.out.println(user);
                dev = "UPDATE Users set Username = '" + user + "', Password = '" + passie + "', Nombre_Completo ='" + nombreC + "', Rol ='" + rol + "'\n"
                        + "where Username = '" + user + "'";

                stmt.executeUpdate(dev);
                JOptionPane.showMessageDialog(null, "Usuario modificado exitosamente!");
                userNTF.setText("");
                passNTF.setText("");
                nameNTF.setText("");
                userNTF.setEditable(true);
            }

            this.setVisible(true);
            // this.setModal(true);
            this.pack();
            this.setLocationRelativeTo(this);
            addUser.setVisible(false);
            this.setLocationRelativeTo(null);
            addDev.setModal(false);
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    conn.close();
                }
            } catch (SQLException se) {

            }
            try {
                if (conn != null) {
                    conn.close();
                }

            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        addUser.setVisible(false);
        addUser.setModal(false);
        addUser.pack();
    }//GEN-LAST:event_jButton30ActionPerformed

    public void UpdateTabla5() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) bugsTable.getModel();
            modelo.setRowCount(0);
            //  System.out.println("hi1");
            String sql = "select Codigo_Bug, Urgencia \n"
                    + "from Bug \n";
            // System.out.println("hi2");
            rs = statement.executeQuery(sql);
            //  System.out.println("hi3");
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                //  System.out.println("4");
                String codigo = rs.getString("Codigo_Bug");
                // System.out.println("5");
                String nombre = rs.getString("Urgencia");
                //  System.out.println("6");

                //   System.out.println("7");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
            }
            bugsTable.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    private void bugsbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bugsbutActionPerformed
        bugss.setVisible(true);
        bugss.setModal(true);
        bugss.pack();
        bugss.setLocationRelativeTo(null);
        this.setVisible(false);

        UpdateTabla5();
        llenarCombo2();

    }//GEN-LAST:event_bugsbutActionPerformed

    private void graphbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphbutActionPerformed
        Graphs.setVisible(true);
        Graphs.setModal(true);
        Graphs.pack();
        Graphs.setLocationRelativeTo(null);
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            ResultSet rs1;
            ResultSet rs2;

            int cant1 = 0, cant2 = 0, cant3 = 0;

            for (int i = 0; i < 3; i++) {
                if (i == 0) {
                    String sql = "select count(Codigo_Bug) as Cantidad\n"
                            + "from Bug \n"
                            + " where Estado= 'Asignado'";
                    rs = statement.executeQuery(sql);
                    while (rs.next()) {

                        String codigo = rs.getString("Cantidad");
                        //   System.out.println(codigo);
                        cant1 = Integer.parseInt(codigo);
                        //   modelo.addRow(newrow);
                    }
                } else if (i == 1) {
                    String sql = "select count(Codigo_Bug) as Cantidad\n"
                            + "from Bug \n"
                            + " where Estado= 'Finalizado'";
                    rs = statement.executeQuery(sql);
                    while (rs.next()) {

                        String codigo = rs.getString("Cantidad");
                        //   System.out.println(codigo);
                        cant2 = Integer.parseInt(codigo);
                        //   modelo.addRow(newrow);
                    }
                } else {
                    String sql = "select count(Codigo_Bug) as Cantidad \n"
                            + "from Bug \n"
                            + " where Estado= 'Nuevo'";
                    rs = statement.executeQuery(sql);
                    while (rs.next()) {

                        String codigo = rs.getString("Cantidad");
                        //   System.out.println(codigo);
                        cant3 = Integer.parseInt(codigo);
                        //   modelo.addRow(newrow);
                    }
                }
            }

            connection.close();

            DefaultPieDataset datos = new DefaultPieDataset();
            datos.setValue("Asignados", cant1);
            datos.setValue("Finalizados", cant2);
            datos.setValue("Nuevos", cant3);

            JFreeChart grafico = ChartFactory.createPieChart("Bugs", datos, true, true, false);
            ChartPanel panel = new ChartPanel(grafico);
            panel.setMouseWheelEnabled(true);
            panel.setPreferredSize(new Dimension(400, 200));

            jPanel12.setLayout(new BorderLayout());
            jPanel12.add(panel, BorderLayout.NORTH);
            pack();
            repaint();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Conectar a Base de Datos");
        }
    }//GEN-LAST:event_graphbutActionPerformed

    private void elimdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elimdeActionPerformed
        int row = DevsTable.getSelectedRow();
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement stmt = connection.createStatement();

            ResultSet rs;
            String value = DevsTable.getModel().getValueAt(row, 0).toString();
            // System.out.println(value);
            String sql = "DELETE FROM Desarrollador where Codigo_Desarrollador = " + value;
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.executeUpdate();
            connection.close();
            JOptionPane.showMessageDialog(null, "Eliminado Exitoso");

        } catch (SQLException se) {

        }
    }//GEN-LAST:event_elimdeActionPerformed

    private void modifdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifdeActionPerformed
        if (DevsTable.getSelectedColumn() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un desarrollador.");
        } else {
            modifDev.setVisible(true);
            modifDev.setModal(true);
            modifDev.pack();
            modifDev.setLocationRelativeTo(this);
            this.setVisible(false);

            int row = DevsTable.getSelectedRow();
            System.out.println(row);
            System.out.println(DevsTable.getModel().getValueAt(row, 0).toString());
            System.out.println(DevsTable.getModel().getValueAt(row, 1).toString());
            idJT1.setText(DevsTable.getModel().getValueAt(row, 0).toString());
            // idJT1.setText("hi");
            nameJT1.setText(DevsTable.getModel().getValueAt(row, 1).toString());
            lenguajes = DevsTable.getModel().getValueAt(row, 2).toString();
            tecnos = DevsTable.getModel().getValueAt(row, 3).toString();

        }
    }//GEN-LAST:event_modifdeActionPerformed

    private void proyecsdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proyecsdeActionPerformed
        proyecsP.setVisible(true);
        proyecsP.setModal(true);
        proyecsP.pack();
        proyecsP.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_proyecsdeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updateTabla();
        updateTabla200();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void proyecsde1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proyecsde1ActionPerformed
        Devs.setVisible(true);
        // this.setModal(true);
        Devs.pack();
        Devs.setLocationRelativeTo(this);
        this.setVisible(false);
        Devs.setLocationRelativeTo(null);
    }//GEN-LAST:event_proyecsde1ActionPerformed

    private void agregde1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregde1ActionPerformed
        if (usersTable.getSelectedColumn() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un Usuario.");
        } else {
            userNTF.setEditable(false);
            modifU = true;
            addUser.setVisible(true);
            addUser.setModal(true);
            addUser.pack();
            addUser.setLocationRelativeTo(this);
            this.setVisible(false);

            int row = usersTable.getSelectedRow();

            System.out.println(usersTable.getModel().getValueAt(row, 0).toString());
            System.out.println(usersTable.getModel().getValueAt(row, 1).toString());
            userNTF.setText(usersTable.getModel().getValueAt(row, 0).toString());
            userTempo = usersTable.getModel().getValueAt(row, 0).toString();
            // idJT1.setText("hi");
            passNTF.setText(usersTable.getModel().getValueAt(row, 1).toString());

            nameNTF.setText(usersTable.getModel().getValueAt(row, 2).toString());

        }
    }//GEN-LAST:event_agregde1ActionPerformed

    private void agregde2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregde2ActionPerformed
        addUser.setVisible(true);
        addUser.setModal(true);
        addUser.pack();
        addUser.setLocationRelativeTo(null);
    }//GEN-LAST:event_agregde2ActionPerformed

    private void agregde3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregde3ActionPerformed
        int row = usersTable.getSelectedRow();
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement stmt = connection.createStatement();

            ResultSet rs;
            String value = usersTable.getModel().getValueAt(row, 0).toString();
            // System.out.println(value);
            String sql = "DELETE FROM Users where Username = '" + value + "'";
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.executeUpdate();
            connection.close();
            JOptionPane.showMessageDialog(null, "Eliminado Exitoso");

        } catch (SQLException se) {

        }
    }//GEN-LAST:event_agregde3ActionPerformed

    private void jComboBox4ABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ABActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ABActionPerformed

    private void jButton31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton31MouseClicked
        /*     if (ProyectosComboBox.getComponentCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay Bugs a los que agregar comentario.");
        } else {
            try {
                String[] splited = ProyectosComboBox.getSelectedItem().toString().split("\\s+");
                System.out.println(splited[1]);
                String bugNum = splited[1];
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String sql3 = "select Username \n"
                + "from Desarrollador \n"
                + "where Codigo_Desarrollador = "
                + DeveloperID;
                rs3 = statement.executeQuery(sql3);
                String User2 = "";
                while (rs3.next()) {
                    User2 = rs3.getString("Username");
                }
                String sql = "insert into Comentario values('" + User2 + "'," + bugNum + ",'" + ComentarioTextArea.getText() + "',getDate())";
                statement.executeUpdate(sql);
                ComentarioTextArea.setText("");
                updateTablas();
                //System.out.println(User2);

                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }*/
    }//GEN-LAST:event_jButton31MouseClicked

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        if (jComboBox4AB.getComponentCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay Bugs a los que agregar comentario.");
        } else {
            try {
                String[] splited = jComboBox4AB.getSelectedItem().toString().split("\\s+");
                System.out.println(splited[1]);
                String bugNum = splited[1];
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String sql3 = "select Username \n"
                        + "from Users \n"
                        + "where Username = "
                        + "'" + currentuser + "'";
                rs3 = statement.executeQuery(sql3);
                String User2 = "";
                while (rs3.next()) {
                    User2 = rs3.getString("Username");
                }
                String sql = "insert into Comentario values('" + User2 + "'," + bugNum + ",'" + jTextAreaAB.getText() + "',getDate())";
                statement.executeUpdate(sql);
                System.out.println("2");
                jTextAreaAB.setText("");
                updateComentarios();

                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButtonFiltrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrar1ActionPerformed
        // TODO add your handling code here:
        if (jFormattedTextField2.getText() == "") {
            updateComentarios();
        } else {
            try {
                String Filtro = jFormattedTextField2.getText();
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String model3 = "";
                String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                        + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                        + "where B.Codigo_Proyecto = " + Filtro + "\n order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
                rs3 = statement.executeQuery(sql3);

                String currentProject = "";
                String currentBug = "";
                boolean contador = false;
                while (rs3.next()) {
                    String Codigo_Bug = rs3.getString("Codigo_Bug");
                    String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                    String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                    String Comentario = rs3.getString("Comentario");
                    String Username = rs3.getString("Username");
                    String Rol = (rs3.getString("Rol")).substring(0, 3);
                    String date = rs3.getString("Datetime");
                    if (currentProject.equals(Codigo_Proyecto) == false) {
                        if (contador) {
                            model3 += "\n";
                        }
                        model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                        currentProject = Codigo_Proyecto;
                    }
                    contador = true;
                    if (currentBug.equals(Codigo_Bug) == false) {
                        model3 += "    BUG: " + Codigo_Bug + "\n";
                        currentBug = Codigo_Bug;
                    }
                    model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
                }
                jTextArea2AB.setText(model3);
                System.out.println("Comentarios: " + model3);
                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButtonFiltrar1ActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        updateComentarios3000();
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jButton32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton32MouseClicked
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "SignInPanel");

        Color colorOFF = new Color(60, 63, 65);
        rolsito = false;
        HR2.setAlive(false);
        HR2 = null;
    }//GEN-LAST:event_jButton32MouseClicked

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButtonABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonABActionPerformed
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            String desc = jTextArea3AB.getText();
            int nivel = jComboBox2AB.getSelectedIndex()+1;
            String proyecto = String.valueOf(jComboBox1AB.getSelectedItem());
            String sql2 = "INSERT INTO Bug ([Descripcion], [Codigo_Proyecto], [Urgencia], [Estado], [Fecha_Inicio], [Fecha_Final]) VALUES (N'"+desc+"', "+proyecto+", "+nivel+", N'Nuevo  ', NULL, NULL)";
            statement.executeQuery(sql2);
            connection.close();
            System.out.println("Se inserto el bug");

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("");
        }
        jTextArea3AB.setText("");
        jComboBox1AB.setSelectedIndex(0);
        jComboBox2AB.setSelectedIndex(0);
        JOptionPane.showMessageDialog(jMainPanelAB, "Se genero el bug");
    }//GEN-LAST:event_jButtonABActionPerformed

    private void jButtonFiltrarABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarABActionPerformed
        if (jComboBox3AB.getSelectedIndex() == 0) {
            try {
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();
                String filtro = jFormattedTextField1AB.getText();
                jFormattedTextField1AB.setText(null);

                ResultSet rs2;
                DefaultTableModel modelo2 = (DefaultTableModel) BugsTableAB.getModel();
                modelo2.setRowCount(0);
                String sql2 = "select B.Codigo_Bug, B.Descripcion, B.Codigo_Proyecto, B.Urgencia, B.Estado, Fecha_Inicio, Fecha_Final, D.Username\n"
                + "from Bug B inner join Desarrollador D on D.Codigo_Desarrollador = B.Codigo_Desarrollador";
                rs2 = statement.executeQuery(sql2);
                while (rs2.next()) {

                    String Codigo_Desarrollador = rs2.getString("Username");
                    String Codigo_Bug = rs2.getString("Codigo_Bug");
                    String Descripcion = rs2.getString("Descripcion");
                    String Codigo_Proyecto = rs2.getString("Codigo_Proyecto");
                    String Urgencia = rs2.getString("Urgencia");
                    String Estado = rs2.getString("Estado");
                    String Fecha_Inicio = rs2.getString("Fecha_Inicio");
                    String Fecha_Final = rs2.getString("Fecha_Final");
                    Object[] newrow = {Codigo_Desarrollador, Codigo_Bug, Descripcion, Codigo_Proyecto, Urgencia, Estado, Fecha_Inicio, Fecha_Final};
                    if ((Estado.equalsIgnoreCase("Asignado") || Estado.equalsIgnoreCase("Finalizado")) && filtro.equals("")) {
                        modelo2.addRow(newrow);
                    } else if ((Estado.equalsIgnoreCase("Asignado") || Estado.equalsIgnoreCase("Finalizado")) && Codigo_Proyecto.equals(filtro)) {
                        modelo2.addRow(newrow);
                    }
                }
                BugsTableAB.setModel(modelo2);
                connection.close();

            }
            catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
        else if (jComboBox3AB.getSelectedIndex() == 1){
            try {
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();
                String filtro = jFormattedTextField1AB.getText();
                jFormattedTextField1AB.setText(null);

                ResultSet rs2;
                DefaultTableModel modelo2 = (DefaultTableModel) BugsTableAB.getModel();
                modelo2.setRowCount(0);
                String sql2 = "select B.Codigo_Bug, B.Descripcion, B.Codigo_Proyecto, B.Urgencia, B.Estado, Fecha_Inicio, Fecha_Final, D.Username\n"
                + "from Bug B inner join Desarrollador D on D.Codigo_Desarrollador = B.Codigo_Desarrollador";
                rs2 = statement.executeQuery(sql2);
                while (rs2.next()) {

                    String Codigo_Desarrollador = rs2.getString("Username");
                    String Codigo_Bug = rs2.getString("Codigo_Bug");
                    String Descripcion = rs2.getString("Descripcion");
                    String Codigo_Proyecto = rs2.getString("Codigo_Proyecto");
                    String Urgencia = rs2.getString("Urgencia");
                    String Estado = rs2.getString("Estado");
                    String Fecha_Inicio = rs2.getString("Fecha_Inicio");
                    String Fecha_Final = rs2.getString("Fecha_Final");
                    Object[] newrow = {Codigo_Desarrollador, Codigo_Bug, Descripcion, Codigo_Proyecto, Urgencia, Estado, Fecha_Inicio, Fecha_Final};
                    if ((Estado.equalsIgnoreCase("Asignado") || Estado.equalsIgnoreCase("Finalizado")) && Codigo_Desarrollador.equals(filtro)) {
                        modelo2.addRow(newrow);
                    }
                    else if ((Estado.equalsIgnoreCase("Asignado") || Estado.equalsIgnoreCase("Finalizado")) && filtro.equals("")) {
                        modelo2.addRow(newrow);
                    }
                }
                BugsTableAB.setModel(modelo2);
                connection.close();

            }
            catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButtonFiltrarABActionPerformed

    private void jButtonAgregarCommentABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarCommentABActionPerformed
        // TODO add your handling code here:
        if (jComboBox4AB1.getComponentCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay Bugs a los que agregar comentario.");
        } else {
            try {
                String[] splited = jComboBox4AB1.getSelectedItem().toString().split("\\s+");
                System.out.println(splited[1]);
                String bugNum = splited[1];
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String sql3 = "select Username \n"
                + "from Users \n"
                + "where Username = "
                + "'" + currentuser2 + "'";
                rs3 = statement.executeQuery(sql3);
                String User2 = "";
                while (rs3.next()) {
                    User2 = rs3.getString("Username");
                }
                String sql = "insert into Comentario values('" + User2 + "'," + bugNum + ",'" + jTextAreaAB1.getText() + "',getDate())";
                statement.executeUpdate(sql);
                System.out.println("2");
                jTextAreaAB1.setText("");
                updateComentarios2();

                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButtonAgregarCommentABActionPerformed

    private void jButtonFiltrar1ABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrar1ABActionPerformed
        // TODO add your handling code here:
        if (jFormattedTextField2AB.getText() == "") {
            updateComentarios2();
        }
        else {
            try {
                String Filtro = jFormattedTextField2AB.getText();
                Connection connection = DriverManager.getConnection(url, username, password);
                System.out.println("Connected to SQL Server.");
                Statement statement = connection.createStatement();

                ResultSet rs3;
                String model3 = "";
                String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                + "where B.Codigo_Proyecto = " + Filtro + "\n order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
                rs3 = statement.executeQuery(sql3);

                String currentProject = "";
                String currentBug = "";
                boolean contador = false;
                while (rs3.next()) {
                    String Codigo_Bug = rs3.getString("Codigo_Bug");
                    String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                    String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                    String Comentario = rs3.getString("Comentario");
                    String Username = rs3.getString("Username");
                    String Rol = (rs3.getString("Rol")).substring(0, 3);
                    String date = rs3.getString("Datetime");
                    if (currentProject.equals(Codigo_Proyecto) == false) {
                        if (contador) {
                            model3 += "\n";
                        }
                        model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                        currentProject = Codigo_Proyecto;
                    }
                    contador = true;
                    if (currentBug.equals(Codigo_Bug) == false) {
                        model3 += "    BUG: " + Codigo_Bug + "\n";
                        currentBug = Codigo_Bug;
                    }
                    model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
                }
                jTextArea2AB1.setText(model3);
                System.out.println("Comentarios: " + model3);
                connection.close();

            } catch (SQLException ex) {
                //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error al Updatear Tabla Proyectos");
            }
        }
    }//GEN-LAST:event_jButtonFiltrar1ABActionPerformed

    private void JBCrearBugsABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCrearBugsABActionPerformed
        llenarCombobox();
        jMainPanelAB1.removeAll();
        jMainPanelAB1.add(jPanelGenerarBugAB);
        jMainPanelAB1.repaint();
        jMainPanelAB1.revalidate();
    }//GEN-LAST:event_JBCrearBugsABActionPerformed

    private void JBMostrarTablaABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBMostrarTablaABActionPerformed
        updateTablas2();
        jMainPanelAB1.removeAll();
        jMainPanelAB1.add(jPanelTablaAB);
        jMainPanelAB1.repaint();
        jMainPanelAB1.revalidate();
    }//GEN-LAST:event_JBMostrarTablaABActionPerformed

    private void JBExportarPDFABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBExportarPDFABActionPerformed
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro
        = new FileNameExtensionFilter(
            "PDFs", "pdf");
        jfc.setFileFilter(filtro);
        int seleccion = jfc.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            String directorio = "";
            directorio += jfc.getSelectedFile();
            exportar(directorio, jMainPanelAB);
        }
    }//GEN-LAST:event_JBExportarPDFABActionPerformed
    
    private void jLabel2ABMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2ABMouseClicked

    }//GEN-LAST:event_jLabel2ABMouseClicked

    private void JBComentariosABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBComentariosABActionPerformed
        // TODO add your handling code here:
        updateComentarios2();
        jMainPanelAB1.removeAll();
        jMainPanelAB1.add(jPanelComentariosAB);
        jMainPanelAB1.repaint();
        jMainPanelAB1.revalidate();
    }//GEN-LAST:event_JBComentariosABActionPerformed

    private void JBSignOutABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSignOutABActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) MainPanel.getLayout();
        card.show(MainPanel, "SignInPanel");
        rolsito2 = false;
        currentuser2 = "";
        HR2.setAlive(false);
        HR2 = null;
    }//GEN-LAST:event_JBSignOutABActionPerformed

    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });

    }

    public boolean signInDesarrollador() throws NoSuchAlgorithmException {
        //String user = UsuarioTextField.getText();
        //String pass = PasswordTextField.getText();

        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            ResultSet rs;
            ResultSet rs2;
            String cadenita = UsuarioTextField.getText();
            //System.out.println(cadenita);
            String sql2 = "select Rol from Users where Username = '"+cadenita+"'";
            Statement statement = connection.createStatement();
            ResultSet rs3;
            rs2 = statement.executeQuery(sql2);
            String roll = "";
            while (rs2.next()) {
                roll = rs2.getString("Rol");
            }
            if(roll.equals("Desarrollador")){
                String sql = "select U.Username, U.password, D.Codigo_Desarrollador, U.nombre_Completo from users U inner join Desarrollador D on D.Username=U.Username ";
                rs = statement.executeQuery(sql);
                System.out.println("es");

                while (rs.next()) {
                    
                    String user = rs.getString("Username");
                    String pass = rs.getString("Password");

                    String codigo = rs.getString("Codigo_Desarrollador");
                    String nombre = rs.getString("Nombre_Completo");
                    //(codigo);
                    String passie = PasswordTextField.getText();
                    String hashed = byteToHex(passie);

                    if (UsuarioTextField.getText().equals(user) && hashed.equals(pass)) {
                        DeveloperID = codigo;
                        developerIDLabel.setText(codigo + " - " + nombre);
                        connection.close();
                        return true;
                    }
                }
            }else if(roll.equals("Administrador")){
                rolsito = true;
                String sql = "select U.Username, U.Password,  U.nombre_Completo from users U  ";
                rs3 = statement.executeQuery(sql);
                System.out.println("es");
                
                while (rs3.next()) {
                    System.out.println("entro");
                    String user = rs3.getString("Username");
                    System.out.println(user);
                    String pass = rs3.getString("Password");

                    String nombre = rs3.getString("Nombre_Completo");
                    //(codigo);
                    String passie = PasswordTextField.getText();
                    String hashed = byteToHex(passie);

                    if (UsuarioTextField.getText().equals(user) && hashed.equals(pass)) {
                    //    DeveloperID = codigo;
                      //  developerIDLabel.setText(codigo + " - " + nombre);
                        connection.close();
                        System.out.println("bool: "+rolsito);
                        return true;
                    }
                }
            }
            else if (roll.equals("Analista")) {
                rolsito2 = true;
                String sql = "select U.Username, U.Password,  U.nombre_Completo from users U  ";
                rs3 = statement.executeQuery(sql);
                System.out.println("es");

                while (rs3.next()) {
                    System.out.println("entro");
                    String user = rs3.getString("Username");
                    System.out.println(user);
                    String pass = rs3.getString("Password");

                    String nombre = rs3.getString("Nombre_Completo");
                    //(codigo);
                    String passie = PasswordTextField.getText();
                    String hashed = byteToHex(passie);

                    if (UsuarioTextField.getText().equals(user) && hashed.equals(pass)) {
                        //    DeveloperID = codigo;
                        //  developerIDLabel.setText(codigo + " - " + nombre);
                        connection.close();
                        return true;
                    }
                }
                System.out.println("entro a analista");
            }
            connection.close();
        } catch (SQLException ex) {
            System.out.println("Fallo en Sign In");
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public void updateTabla2() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) devsTable2.getModel();
            modelo.setRowCount(0);
            String sql = "select Codigo_Desarrollador, Username, Lenguajes_Programacion, Tecnologias_Dominadas, Equipo \n"
                    + "from Desarrollador \n";

            rs = statement.executeQuery(sql);
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                String codigo = rs.getString("Codigo_Desarrollador");
                String nombre = rs.getString("Username");
                String programs = rs.getString("Lenguajes_Programacion");
                String techms = rs.getString("Tecnologias_Dominadas");
                String equip = rs.getString("Equipo");
                Object[] newrow = {codigo, nombre, programs, techms, equip};
                modelo.addRow(newrow);
            }
            devsTable2.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    public void updateTabla4() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) proyecsTable.getModel();
            modelo.setRowCount(0);
            String sql = "select Codigo_Proyecto, Nombre, Fecha_Inicio, Fecha_Final, Equipo_Desarrolladores, ListaBugs, ListaBugsFin \n"
                    + "from Proyecto_Software \n";

            rs = statement.executeQuery(sql);
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                String programs = rs.getString("Fecha_Inicio");
                String techms = rs.getString("Fecha_Final");
                String team = rs.getString("Equipo_Desarrolladores");
                String list1 = rs.getString("ListaBugs");
                String list2 = rs.getString("ListaBugsFin");
                Object[] newrow = {codigo, nombre, programs, techms, team, list1, list2};
                modelo.addRow(newrow);
            }
            proyecsTable.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    public void updateTabla200() {

        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();
            ResultSet rs;
            DefaultTableModel modelo2 = (DefaultTableModel) usersTable.getModel();
            modelo2.setRowCount(0);
            String sql2 = "select Username, Password, Nombre_Completo, Rol \n"
                    + "from Users \n";

            rs = statement.executeQuery(sql2);
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                String codigo = rs.getString("Username");
                String nombre = rs.getString("Password");
                String programs = rs.getString("Nombre_Completo");
                String techms = rs.getString("Rol");

                Object[] newrow = {codigo, nombre, programs, techms};
                modelo2.addRow(newrow);
            }
            usersTable.setModel(modelo2);

            connection.close();
        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }

    }

    public void updateTabla() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) DevsTable.getModel();
            modelo.setRowCount(0);
            String sql = "select Codigo_Desarrollador, Username, Lenguajes_Programacion, Tecnologias_Dominadas, Equipo \n"
                    + "from Desarrollador \n";

            rs = statement.executeQuery(sql);
            // System.out.println("hi");
            while (rs.next()) {
                //   System.out.println("hi2");
                String codigo = rs.getString("Codigo_Desarrollador");
                String nombre = rs.getString("Username");
                String programs = rs.getString("Lenguajes_Programacion");
                String techms = rs.getString("Tecnologias_Dominadas");
                String equip = rs.getString("Equipo");
                Object[] newrow = {codigo, nombre, programs, techms, equip};
                modelo.addRow(newrow);
            }
            DevsTable.setModel(modelo);

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    public void updateTablas() {

        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) ProyectosTable.getModel();
            DefaultTableModel modeloClone = (DefaultTableModel) ProyectosTable2.getModel();
            modelo.setRowCount(0);
            modeloClone.setRowCount(0);
            String sql = "select distinct  B.Codigo_Proyecto, PS.Nombre \n"
                    + "from Bug B inner join Proyecto_Software PS on PS.Codigo_Proyecto=B.Codigo_Proyecto \n"
                    + "where B.Codigo_Desarrollador="
                    + DeveloperID;
            rs = statement.executeQuery(sql);
            //ProyectosComboBox.setModel(new DefaultComboBoxModel<>());
            while (rs.next()) {
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
                modeloClone.addRow(newrow);
                //ProyectosComboBox.addItem(nombre);
            }
            //ProyectosComboBox.addItem("Todos");
            ProyectosTable.setModel(modelo);
            ProyectosTable2.setModel(modeloClone);

            ResultSet rs2;
            DefaultTableModel modelo2 = (DefaultTableModel) BugsTable.getModel();
            modelo2.setRowCount(0);
            String sql2 = "select B.Codigo_Bug, B.Descripcion, B.Codigo_Proyecto, B.Urgencia, B.Estado, Fecha_Inicio, Fecha_Final \n"
                    + "from Bug B \n"
                    + "where B.Codigo_Desarrollador="
                    + DeveloperID;
            rs2 = statement.executeQuery(sql2);
            while (rs2.next()) {
                String Codigo_Bug = rs2.getString("Codigo_Bug");
                String Descripcion = rs2.getString("Descripcion");
                String Codigo_Proyecto = rs2.getString("Codigo_Proyecto");
                String Urgencia = rs2.getString("Urgencia");
                String Estado = rs2.getString("Estado");
                String Fecha_Inicio = rs2.getString("Fecha_Inicio");
                String Fecha_Final = rs2.getString("Fecha_Final");
                Object[] newrow = {Codigo_Bug, Descripcion, Codigo_Proyecto, Urgencia, Estado, Fecha_Inicio, Fecha_Final};
                //System.out.println(Estado);
                //System.out.println(BoxAbiertos.isSelected());
                if (BoxAbiertos.isSelected() == true && (Estado.contains("Asignado"))) {
                    //System.out.println("added");
                    modelo2.addRow(newrow);
                } else if (BoxFinalizados.isSelected() == true && Estado.equalsIgnoreCase("Finalizado")) {
                    modelo2.addRow(newrow);
                }

                //modelo2.addRow(newrow);
            }
            BugsTable.setModel(modelo2);

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Estado, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                    + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                    + "where B.Codigo_Desarrollador = "
                    + DeveloperID + " order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
            rs3 = statement.executeQuery(sql3);
            ProyectosComboBox.setModel(new DefaultComboBoxModel<>());
            String currentProject = "";
            String currentBug = "";
            boolean contador = false;
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                String Comentario = rs3.getString("Comentario");
                String Username = rs3.getString("Username");
                String Rol = (rs3.getString("Rol")).substring(0, 3);
                String date = rs3.getString("Datetime");
                String Estado = rs3.getString("Estado");
                if (BoxAbiertos2.isSelected() == true && (Estado.contains("Asignado"))) {
                    //System.out.println("added");
                    if (currentProject.equals(Codigo_Proyecto) == false) {
                        if (contador) {
                            model3 += "\n";
                        }
                        model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                        currentProject = Codigo_Proyecto;

                    }
                    contador = true;
                    if (currentBug.equals(Codigo_Bug) == false) {
                        model3 += "    BUG: " + Codigo_Bug + "\n";

                        currentBug = Codigo_Bug;
                    }
                    model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
                } else if (BoxFinalizados2.isSelected() == true && Estado.equalsIgnoreCase("Finalizado")) {
                    if (currentProject.equals(Codigo_Proyecto) == false) {
                        if (contador) {
                            model3 += "\n";
                        }
                        model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                        currentProject = Codigo_Proyecto;

                    }
                    contador = true;
                    if (currentBug.equals(Codigo_Bug) == false) {
                        model3 += "    BUG: " + Codigo_Bug + " - FINALIZADO\n";

                        currentBug = Codigo_Bug;
                    }
                    model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
                }

            }
            ComentariosTextArea.setText(model3);
            System.out.println("Comentarios: " + model3);

            ResultSet rs4;
            String sql4 = "select B.Codigo_Bug, B.Codigo_Proyecto \n"
                    + "from Bug B \n"
                    + "where B.Codigo_Desarrollador="
                    + DeveloperID
                    + " and (B.Estado!='Finalizado' or B.Estado!='finalizado')";
            String currentBugu = "";
            rs4 = statement.executeQuery(sql4);

            while (rs4.next()) {
                System.out.println("entro");
                String Codigo_Bug = rs4.getString("Codigo_Bug");
                String Codigo_Proyecto = rs4.getString("Codigo_Proyecto");
                if (currentBugu.equals(Codigo_Bug) == false) {
                    ProyectosComboBox.addItem("BUG: " + Codigo_Bug + " - " + "PROYECTO: " + Codigo_Proyecto);
                    currentBugu = Codigo_Bug;
                }
            }

            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }

    public void inicializarCalendario() {
        /*for (int i = 1; i <= 42; i++) {
            System.out.println("calendario.add(j" + i + ");");
            System.out.println("j" + i + ".setText(\"\");");
        }*/
        calendario.add(j1);
        j1.setText("");
        calendario.add(j2);
        j2.setText("");
        calendario.add(j3);
        j3.setText("");
        calendario.add(j4);
        j4.setText("");
        calendario.add(j5);
        j5.setText("");
        calendario.add(j6);
        j6.setText("");
        calendario.add(j7);
        j7.setText("");
        calendario.add(j8);
        j8.setText("");
        calendario.add(j9);
        j9.setText("");
        calendario.add(j10);
        j10.setText("");
        calendario.add(j11);
        j11.setText("");
        calendario.add(j12);
        j12.setText("");
        calendario.add(j13);
        j13.setText("");
        calendario.add(j14);
        j14.setText("");
        calendario.add(j15);
        j15.setText("");
        calendario.add(j16);
        j16.setText("");
        calendario.add(j17);
        j17.setText("");
        calendario.add(j18);
        j18.setText("");
        calendario.add(j19);
        j19.setText("");
        calendario.add(j20);
        j20.setText("");
        calendario.add(j21);
        j21.setText("");
        calendario.add(j22);
        j22.setText("");
        calendario.add(j23);
        j23.setText("");
        calendario.add(j24);
        j24.setText("");
        calendario.add(j25);
        j25.setText("");
        calendario.add(j26);
        j26.setText("");
        calendario.add(j27);
        j27.setText("");
        calendario.add(j28);
        j28.setText("");
        calendario.add(j29);
        j29.setText("");
        calendario.add(j30);
        j30.setText("");
        calendario.add(j31);
        j31.setText("");
        calendario.add(j32);
        j32.setText("");
        calendario.add(j33);
        j33.setText("");
        calendario.add(j34);
        j34.setText("");
        calendario.add(j35);
        j35.setText("");
        calendario.add(j36);
        j36.setText("");
        calendario.add(j37);
        j37.setText("");
        calendario.add(j38);
        j38.setText("");
        calendario.add(j39);
        j39.setText("");
        calendario.add(j40);
        j40.setText("");
        calendario.add(j41);
        j41.setText("");
        calendario.add(j42);
        j42.setText("");

    }

    public void UpdateComboBox() {
        /*try {
            Connection connection = DriverManager.getConnection(url, user, pass);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();
            ResultSet rs;
            String sql = "select DP.Codigo_Desarrollador, DP.Codigo_Proyecto, PS.Nombre \n"
                    + "from [Desarrolladores en Proyecto] DP inner join Proyecto_Software PS on PS.Codigo_Proyecto=DP.Codigo_Proyecto \n"
                    + "where DP.Codigo_Desarrollador="
                    + DeveloperID;
            rs = statement.executeQuery(sql);
            ProyectosComboBox.setModel(new DefaultComboBoxModel<>());
            while (rs.next()) {
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                ProyectosComboBox.addItem(nombre);
            }
            ProyectosComboBox.addItem("Todos");
            ProyectosComboBox.setSelectedIndex(ProyectosComboBox.getItemCount()-1);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }*/
    }
    
    //Codigo para app analista -------------------------------------------------------------------------------------------------------------------------------
    
    public void updateComentarios2() {
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs3;
            String model3 = "";
            String sql3 = "select B.Codigo_Desarrollador, B.Codigo_Proyecto, B.Codigo_Bug, C.Comentario, C.Username, U.Rol, convert(varchar, C.Datetime, 0) as Datetime \n"
                    + "from Bug B inner join Comentario C on C.Codigo_Bug=B.Codigo_Bug inner join Users U on U.Username=C.Username \n"
                    + "\n order by B.Codigo_Proyecto, B.Codigo_Bug, C.Datetime";
            rs3 = statement.executeQuery(sql3);

            String currentProject = "";
            String currentBug = "";
            boolean contador = false;
            while (rs3.next()) {
                String Codigo_Bug = rs3.getString("Codigo_Bug");
                String Codigo_Proyecto = rs3.getString("Codigo_Proyecto");
                String Codigo_Desarrollador = rs3.getString("Codigo_Desarrollador");
                String Comentario = rs3.getString("Comentario");
                String Username = rs3.getString("Username");
                String Rol = (rs3.getString("Rol")).substring(0, 3);
                String date = rs3.getString("Datetime");
                if (currentProject.equals(Codigo_Proyecto) == false) {
                    if (contador) {
                        model3 += "\n";
                    }
                    model3 += "PROJECTO: " + Codigo_Proyecto + "\n";
                    currentProject = Codigo_Proyecto;
                }
                contador = true;
                if (currentBug.equals(Codigo_Bug) == false) {
                    model3 += "    BUG: " + Codigo_Bug + "\n";
                    currentBug = Codigo_Bug;
                }
                model3 += "        " + Username + " (" + Rol + ")" + ": " + Comentario + " - " + date + "\n";
            }
            jTextArea2AB1.setText(model3);
            System.out.println("Comentarios: " + model3);
            
            ResultSet rs4;
            String sql4 = "select B.Codigo_Bug, B.Codigo_Proyecto \n"
                    + "from Bug B \n"
                    + "where (B.Estado!='Finalizado' or B.Estado!='finalizado')";
            String currentBugu = "";
            rs4 = statement.executeQuery(sql4);
            jComboBox4AB1.setModel(new DefaultComboBoxModel<>());
            while (rs4.next()) {
                System.out.println("entro");
                String Codigo_Bug = rs4.getString("Codigo_Bug");
                String Codigo_Proyecto = rs4.getString("Codigo_Proyecto");
                if (currentBugu.equals(Codigo_Bug) == false) {
                    jComboBox4AB1.addItem("BUG: " + Codigo_Bug + " - " + "PROYECTO: " + Codigo_Proyecto);
                    currentBugu = Codigo_Bug;
                }
            }
            
            ResultSet rs;
            DefaultTableModel modelo = (DefaultTableModel) ProyectosTableAB.getModel();
            modelo.setRowCount(0);
            String sql = "select distinct  B.Codigo_Proyecto, PS.Nombre \n"
                    + "from Bug B inner join Proyecto_Software PS on PS.Codigo_Proyecto=B.Codigo_Proyecto";
            rs = statement.executeQuery(sql);
            
            while (rs.next()) {
                String codigo = rs.getString("Codigo_Proyecto");
                String nombre = rs.getString("Nombre");
                Object[] newrow = {codigo, nombre};
                modelo.addRow(newrow);
            }
            ProyectosTableAB.setModel(modelo);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }
    
    private void llenarCombobox() {
        jComboBox1AB.removeAllItems();
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();
            
            ResultSet rs2;
            String sql2 = "select P.Codigo_Proyecto from Proyecto_Software P";
            rs2 = statement.executeQuery(sql2);
            while (rs2.next()) {
                String Codigo_Proyecto = rs2.getString("Codigo_Proyecto");
                jComboBox1AB.addItem(Codigo_Proyecto);
            }
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }
    
    public void updateTablas2() {

        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();

            ResultSet rs2;
            DefaultTableModel modelo2 = (DefaultTableModel) BugsTableAB.getModel();
            modelo2.setRowCount(0);
          
            String sql2 = "select B.Codigo_Bug, B.Descripcion, B.Codigo_Proyecto, B.Urgencia, B.Estado, Fecha_Inicio, Fecha_Final, D.Username\n"
                    + "from Bug B inner join Desarrollador D on D.Codigo_Desarrollador = B.Codigo_Desarrollador";
            rs2 = statement.executeQuery(sql2);
            while (rs2.next()) {
                String Codigo_Desarrollador = rs2.getString("Username");
                String Codigo_Bug = rs2.getString("Codigo_Bug");
                String Descripcion = rs2.getString("Descripcion");
                String Codigo_Proyecto = rs2.getString("Codigo_Proyecto");
                String Urgencia = rs2.getString("Urgencia");
                String Estado = rs2.getString("Estado");
                String Fecha_Inicio = rs2.getString("Fecha_Inicio");
                String Fecha_Final = rs2.getString("Fecha_Final");
                Object[] newrow = {Codigo_Desarrollador, Codigo_Bug, Descripcion, Codigo_Proyecto, Urgencia, Estado, Fecha_Inicio, Fecha_Final};
                if(Estado.equalsIgnoreCase("Asignado") || Estado.equalsIgnoreCase("Finalizado")){
                    modelo2.addRow(newrow);
                }
            }
            BugsTableAB.setModel(modelo2);
            connection.close();

        } catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al Updatear Tabla Proyectos");
        }
    }
    
    public void exportar(String directorio, JPanel panel) {
        Document document = new Document(PageSize.A3);
        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(directorio+".pdf"));
            document.open();
            for (int j = 0; j < jComboBox1AB.getItemCount(); j++) {
                    Paragraph para = new Paragraph("                       Proyecto " + jComboBox1AB.getItemAt(j) + "\n\n");
                    document.add(para);
                    PdfPTable table = new PdfPTable(7);
                    PdfPCell c1 = new PdfPCell(new Phrase("Codigo"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Descripcion"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Cod. Proyecto"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Niv. Urgencia"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Estado"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Fecha Inicio"));
                    table.addCell(c1);
                    c1 = new PdfPCell(new Phrase("Fecha Finalizado"));
                    table.addCell(c1);
                try {
                    Connection connection = DriverManager.getConnection(url, username, password);
                    System.out.println("Connected to SQL Server.");
                    Statement statement = connection.createStatement();
                    ResultSet rs2;
                    String sql2 = "select P.Nombre, B.Codigo_Bug, B.Descripcion, B.Codigo_Proyecto, B.Urgencia, B.Estado, B.Fecha_Inicio, B.Fecha_Final\n" +
                                    "from Bug B inner join Proyecto_Software P on P.Codigo_Proyecto=B.Codigo_Proyecto\n" +
                                        "where B.Codigo_Proyecto="+jComboBox1AB.getItemAt(j)+" order by B.Estado desc";
                    rs2 = statement.executeQuery(sql2);
                    //para = new Paragraph("                       Proyecto " + rs2.getString("Nombre") + "\n\n");
                    //document.add(para);
                    while (rs2.next()) {
                        table.addCell(rs2.getString("Codigo_Bug"));
                        table.addCell(rs2.getString("Descripcion"));
                        table.addCell(rs2.getString("Codigo_Proyecto"));
                        table.addCell(rs2.getString("Urgencia"));
                        table.addCell(rs2.getString("Estado"));
                        table.addCell(rs2.getString("Fecha_Inicio"));
                        table.addCell(rs2.getString("Fecha_Final"));
                    }
                    document.add(table);
                    connection.close();
                    
                } catch (SQLException ex) {
                    //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("Error al conectar BD");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (document.isOpen()) {
                document.close();
            }
        }
        JOptionPane.showMessageDialog(panel, "Se exporto a PDF");
    } 
    
    public String getNombre (int x) {
        String nombre = "";
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            System.out.println("Connected to SQL Server.");
            Statement statement = connection.createStatement();
            ResultSet rs2;
            String sql2 = "select P.Nombre\n"
                    + "from Proyecto_Software P\n"
                    + "where P.Codigo_Proyecto=" + jComboBox1AB.getItemAt(x);
            rs2 = statement.executeQuery(sql2);
            nombre = rs2.getString("Nombre");
            connection.close();
            return nombre;
        } 
        catch (SQLException ex) {
            //Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al conectar BD");
        }
        return nombre;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminPanel;
    private javax.swing.JCheckBox BoxAbiertos;
    private javax.swing.JCheckBox BoxAbiertos2;
    private javax.swing.JCheckBox BoxFinalizados;
    private javax.swing.JCheckBox BoxFinalizados2;
    private javax.swing.JTable BugsTable;
    private javax.swing.JTable BugsTableAB;
    private com.toedter.calendar.JDateChooser Chooser;
    private com.toedter.calendar.JDateChooser Chooser1;
    private javax.swing.JTextArea ComentarioTextArea;
    private javax.swing.JTextArea ComentariosTextArea;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JDialog Devs;
    private javax.swing.JTable DevsTable;
    private javax.swing.JDialog Graphs;
    private javax.swing.JButton JBComentariosAB;
    private javax.swing.JButton JBCrearBugsAB;
    private javax.swing.JButton JBExportarPDFAB;
    private javax.swing.JButton JBMostrarTablaAB;
    private javax.swing.JButton JBSignOutAB;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JLabel MesLabel;
    private com.toedter.calendar.JMonthChooser MonthChooser;
    private javax.swing.JPanel PaneMenus;
    private javax.swing.JPanel PaneNotificaciones;
    private javax.swing.JPanel PanelCalendario;
    private javax.swing.JPasswordField PasswordTextField;
    private javax.swing.JComboBox<String> ProyectosComboBox;
    private javax.swing.JTable ProyectosTable;
    private javax.swing.JTable ProyectosTable2;
    private javax.swing.JTable ProyectosTable3;
    private javax.swing.JTable ProyectosTableAB;
    private javax.swing.JPanel SignInPanel;
    private javax.swing.JTextField UsuarioTextField;
    private com.toedter.calendar.JYearChooser YearChooser;
    private javax.swing.JDialog addDev;
    private javax.swing.JDialog addUser;
    private javax.swing.JButton agregde1;
    private javax.swing.JButton agregde2;
    private javax.swing.JButton agregde3;
    private javax.swing.JDialog bugsP;
    private javax.swing.JTable bugsTable;
    private javax.swing.JButton bugsbut;
    private javax.swing.JDialog bugss;
    private javax.swing.JComboBox<String> comboDevs;
    private javax.swing.JDialog crearProyecs;
    private javax.swing.JLabel developerIDLabel;
    private javax.swing.JTable devieTable;
    private javax.swing.JTable devsTable2;
    private javax.swing.JDialog elimDev;
    private javax.swing.JButton elimde;
    private javax.swing.JButton finalAdd;
    private javax.swing.JButton finalAdd1;
    private javax.swing.JButton graphbut;
    private javax.swing.JDialog graphsP;
    private javax.swing.JTextField idJT;
    private javax.swing.JTextField idJT1;
    private javax.swing.JTextArea j1;
    private javax.swing.JTextArea j10;
    private javax.swing.JTextArea j11;
    private javax.swing.JTextArea j12;
    private javax.swing.JTextArea j13;
    private javax.swing.JTextArea j14;
    private javax.swing.JTextArea j15;
    private javax.swing.JTextArea j16;
    private javax.swing.JTextArea j17;
    private javax.swing.JTextArea j18;
    private javax.swing.JTextArea j19;
    private javax.swing.JTextArea j2;
    private javax.swing.JTextArea j20;
    private javax.swing.JTextArea j21;
    private javax.swing.JTextArea j22;
    private javax.swing.JTextArea j23;
    private javax.swing.JTextArea j24;
    private javax.swing.JTextArea j25;
    private javax.swing.JTextArea j26;
    private javax.swing.JTextArea j27;
    private javax.swing.JTextArea j28;
    private javax.swing.JTextArea j29;
    private javax.swing.JTextArea j3;
    private javax.swing.JTextArea j30;
    private javax.swing.JTextArea j31;
    private javax.swing.JTextArea j32;
    private javax.swing.JTextArea j33;
    private javax.swing.JTextArea j34;
    private javax.swing.JTextArea j35;
    private javax.swing.JTextArea j36;
    private javax.swing.JTextArea j37;
    private javax.swing.JTextArea j38;
    private javax.swing.JTextArea j39;
    private javax.swing.JTextArea j4;
    private javax.swing.JTextArea j40;
    private javax.swing.JTextArea j41;
    private javax.swing.JTextArea j42;
    private javax.swing.JTextArea j5;
    private javax.swing.JTextArea j6;
    private javax.swing.JTextArea j7;
    private javax.swing.JTextArea j8;
    private javax.swing.JTextArea j9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAB;
    private javax.swing.JButton jButtonAgregarCommentAB;
    private javax.swing.JButton jButtonFiltrar1;
    private javax.swing.JButton jButtonFiltrar1AB;
    private javax.swing.JButton jButtonFiltrarAB;
    private javax.swing.JComboBox<String> jComboBox1AB;
    private javax.swing.JComboBox<String> jComboBox2AB;
    private javax.swing.JComboBox<String> jComboBox3AB;
    private javax.swing.JComboBox<String> jComboBox4AB;
    private javax.swing.JComboBox<String> jComboBox4AB1;
    private javax.swing.JTextPane jFormattedTextField1AB;
    private javax.swing.JTextPane jFormattedTextField2;
    private javax.swing.JTextPane jFormattedTextField2AB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel1AB;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel2AB;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel3AB;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel4AB;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel5AB;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel6AB;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel7AB;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel8AB;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel9AB;
    private javax.swing.JPanel jMainPanelAB;
    private javax.swing.JPanel jMainPanelAB1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelComentariosAB;
    private javax.swing.JPanel jPanelGenerarBugAB;
    private javax.swing.JPanel jPanelTablaAB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane1AB;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane2AB;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane3AB;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane4AB;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane5AB;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane6AB;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane7AB;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator1AB;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator2AB;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator3AB;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea2AB;
    private javax.swing.JTextArea jTextArea2AB1;
    private javax.swing.JTextArea jTextArea3AB;
    private javax.swing.JTextArea jTextAreaAB;
    private javax.swing.JTextArea jTextAreaAB1;
    private javax.swing.JPanel menuPanelAB;
    private javax.swing.JDialog modifDev;
    private javax.swing.JButton modifde;
    private javax.swing.JTextField nameJT;
    private javax.swing.JTextField nameJT1;
    private javax.swing.JTextField nameNTF;
    private javax.swing.JScrollPane panelshow2;
    private javax.swing.JTextField passNTF;
    private javax.swing.JButton prograBut;
    private javax.swing.JButton prograBut1;
    private javax.swing.JTextField prograJT;
    private javax.swing.JTextField prograJT1;
    private javax.swing.JTextField proyCode;
    private javax.swing.JTextField proyName;
    private javax.swing.JDialog proyecsP;
    private javax.swing.JTable proyecsTable;
    private javax.swing.JButton proyecsde;
    private javax.swing.JButton proyecsde1;
    private javax.swing.JComboBox<String> rolsCombo;
    private javax.swing.JScrollPane scrollpane;
    private javax.swing.JDialog softAdd;
    private javax.swing.JTable teamsTable;
    private javax.swing.JButton techBut;
    private javax.swing.JButton techBut1;
    private javax.swing.JTextField techsJT;
    private javax.swing.JTextField techsJT1;
    private javax.swing.JTextField userNTF;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
